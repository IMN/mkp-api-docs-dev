{
  "swagger": "2.0",
  "info": {
    "title": "IMN Marketplace API  - DEV",
    "description": "# The REST API of IMN system - Marketplace\r\n## Overview\r\nThe REST APIs provide programmatic access to read and write IMN data. \r\n\r\nThis API allows the marketplace to push data to IMN.\r\n\r\n\r\nThe main features are:\r\n- Push merchant offers\r\n- Push merchant orders\r\n- ...\r\n\r\n\r\n## Things to keep in mind\r\n### API Rate Limits\r\n- The IMN REST API is limited to 100 calls/minute.\r\n\r\n### Media type\r\nThe default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.\r\n\r\n### Required content type\r\nThe required and default encoding for the request and responses is UTF8.\r\n\r\n### Required date time format\r\nAll our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.\r\n\r\n### Base URL\r\nAll URLs returned by the IMN API are relative to this base URL, and all requests to the REST API must use this base URL template.\r\n\r\nYou can test our API on https://mkp-api-docs.imn.io/swagger-ui\r\n\r\nYou can contact us on [gitter, #IMN/API](https://gitter.im/IMN/API)\r\n\r\n",
    "version": "1.0",
    "x-logo": {
      "url": "https://imngo.blob.core.windows.net/imngo/images/imn-logo.png",
      "backgroundColor": "#FFFFFF"
    },
    "contact": {
      "email": "support@imn.io"
    },
    "license": {
      "name": "IMN",
      "url": "https://go.imn.io"
    }
  },
  "host": "api.imn.io",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Marketplace API - Offers - Global",
      "x-displayName": "Global"
    },
    {
      "name": "Marketplaces - Orders - Global",
      "x-displayName": "Global"
    },
    {
      "name": "Marketplaces - Orders - Order Change Reporting",
      "x-displayName": "Order Change Reporting"
    },
    {
      "name": "Marketplaces - Orders - Batches",
      "x-displayName": "Batches"
    },
    {
      "name": "Marketplace API - List of Values - LOV",
      "x-displayName": "LOV"
    }
  ],
  "paths": {
    "/marketplace/offers/v1/{marketplaceCode}/{merchantCode}/events": {
      "post": {
        "tags": [
          "Marketplace API - Offers - Global"
        ],
        "summary": "Push a batch of merchant marketplace offers events",
        "description": "Use v2 to reduce the request complexity",
        "deprecated": true,
        "operationId": "PushMerchantOfferEvents",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter'"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          },
          {
            "name": "request",
            "in": "body",
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 1000,
              "items": {
                "$ref": "#/definitions/merchantOfferEventBase'"
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The merchant offers changes have been received"
          },
          "400": {
            "$ref": "#/responses/offerBatchBadRequest'"
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/offers/v1/{marketplaceCode}/{merchantCode}/events/v2": {
      "post": {
        "x-releaseStatus": "DRAFT",
        "tags": [
          "Marketplace API - Offers - Global"
        ],
        "summary": "[DRAFT] Push a batch of merchant marketplace offers events",
        "operationId": "PushMerchantOfferEventsV2",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter'"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          },
          {
            "name": "request",
            "in": "body",
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 1000,
              "items": {
                "$ref": "#/definitions/offerStatusBase'"
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The merchant offers changes have been accepted"
          },
          "400": {
            "$ref": "#/responses/offerBatchBadRequest'"
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/offers/v1/{marketplaceCode}/{merchantCode}/marketplacePublication/events": {
      "post": {
        "x-releaseStatus": "DRAFT",
        "tags": [
          "Marketplace API - Offers - Global"
        ],
        "summary": "[DRAFT] Synchronize IMN about offer publication events done on the marketplace",
        "operationId": "PushMarketplacePublicationEvents",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter'"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          },
          {
            "name": "request",
            "in": "body",
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 1000,
              "items": {
                "$ref": "#/definitions/offerPublicationStatusBase'"
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Events about offer publication done on the marketplace accepted"
          },
          "400": {
            "$ref": "#/responses/offerBatchBadRequest'"
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/offers/v1/{marketplaceCode}/{merchantCode}/list": {
      "get": {
        "tags": [
          "Marketplace API - Offers - Global"
        ],
        "summary": "Get merchant offer list",
        "operationId": "GetMerchantOfferList",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter'"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          },
          {
            "$ref": "#/parameters/paginationContinuationTokenQueryStringParameter'"
          },
          {
            "$ref": "#/parameters/pageSizeQueryStringParameter'"
          }
        ],
        "responses": {
          "200": {
            "description": "The merchant offer list",
            "schema": {
              "$ref": "#/definitions/merchantOfferPaginatedList'"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/offers/v1/{marketplaceCode}/{merchantCode}/{sku}": {
      "get": {
        "tags": [
          "Marketplace API - Offers - Global"
        ],
        "summary": "Get merchant offer",
        "operationId": "GetMerchantOffer",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter'"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          },
          {
            "$ref": "#/parameters/skuPathParameter'"
          }
        ],
        "responses": {
          "200": {
            "description": "The merchant offer",
            "schema": {
              "$ref": "#/definitions/merchantOffer'"
            }
          },
          "404": {
            "$ref": "#/responses/offerNotFound'"
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/offers/v1/{marketplaceCode}/{merchantCode}/publications/{correlationId}/start": {
      "post": {
        "tags": [
          "Marketplace API - Offers - Global"
        ],
        "summary": "Start the publication of merchant offers",
        "operationId": "StartMerchantOffersPublication",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter'"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          },
          {
            "$ref": "#/parameters/correlationIdParameter'"
          }
        ],
        "responses": {
          "204": {
            "description": "The merchant offers changes have been saved!"
          },
          "400": {
            "$ref": "#/responses/offerBatchBadRequest'"
          },
          "502": {
            "description": "In case of unavailability",
            "x-ignore-response-content": "true"
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/offers/v1/{marketplaceCode}/{merchantCode}/publications/{correlationId}/events": {
      "post": {
        "tags": [
          "Marketplace API - Offers - Global"
        ],
        "summary": "Publish merchant offers",
        "operationId": "PublishMerchantOffers",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter'"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          },
          {
            "$ref": "#/parameters/correlationIdParameter'"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 1000,
              "items": {
                "$ref": "#/definitions/merchantOfferEventBase'"
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The merchant offers have been received!"
          },
          "400": {
            "$ref": "#/responses/offerBatchBadRequest'"
          },
          "502": {
            "description": "In case of unavailability",
            "x-ignore-response-content": "true"
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/offers/v1/{marketplaceCode}/{merchantCode}/publications/{correlationId}/complete": {
      "post": {
        "tags": [
          "Marketplace API - Offers - Global"
        ],
        "summary": "Complete the publication of the merchant offers",
        "operationId": "CompleteMerchantOffersPublication",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter'"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          },
          {
            "$ref": "#/parameters/correlationIdParameter'"
          }
        ],
        "responses": {
          "204": {
            "description": "The merchant offers publication have been completed!"
          },
          "400": {
            "$ref": "#/responses/offerBatchBadRequest'"
          },
          "502": {
            "description": "In case of unavailability",
            "x-ignore-response-content": "true"
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/offers/v1/{marketplaceCode}/{merchantCode}/publications/{correlationId}/status": {
      "get": {
        "tags": [
          "Marketplace API - Offers - Global"
        ],
        "summary": "Get status of the publication of merchant offers",
        "operationId": "GetMerchantOffersPublicationStatus",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter'"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          },
          {
            "$ref": "#/parameters/correlationIdParameter'"
          }
        ],
        "responses": {
          "200": {
            "description": "The publication status",
            "schema": {
              "$ref": "#/definitions/feedPublicationStatusResponse'"
            }
          },
          "400": {
            "$ref": "#/responses/offerBatchBadRequest'"
          },
          "502": {
            "description": "In case of unavailability",
            "x-ignore-response-content": "true"
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/orders/v1/{marketplaceCode}/{merchantCode}/events": {
      "post": {
        "tags": [
          "Marketplaces - Orders - Batches"
        ],
        "operationId": "PushMerchantOrdersEvents",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter'"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          },
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/batchMerchantMarketplaceOrders'"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The merchant orders changes have been saved!"
          },
          "400": {
            "$ref": "#/responses/orderBatchBadRequest'"
          },
          "403": {
            "description": "The merchant has disabled the marketplace",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage'"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/orders/v1/{marketplaceCode}/{merchantCode}/{marketplaceOrderId}/changes/{correlationId}/done": {
      "post": {
        "tags": [
          "Marketplaces - Orders - Order Change Reporting"
        ],
        "operationId": "OrderChangeStatusCompleted",
        "summary": "Declare the completion of the order change request by the marketplace",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter'"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          },
          {
            "$ref": "#/parameters/marketplaceOrderIdParameter'"
          },
          {
            "$ref": "#/parameters/correlationIdParameter'"
          }
        ],
        "responses": {
          "204": {
            "description": "The merchant orders changes have been saved!"
          },
          "400": {
            "description": "Something wrong in the request, please check the documentation.",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage'"
            }
          },
          "404": {
            "$ref": "#/responses/orderChangeNotFound'"
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/orders/v1/{marketplaceCode}/{merchantCode}/{marketplaceOrderId}/changes/{correlationId}/failed": {
      "post": {
        "tags": [
          "Marketplaces - Orders - Order Change Reporting"
        ],
        "operationId": "OrderChangeStatusFailed",
        "summary": "Declare the failure of the order change request by the marketplace",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter'"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          },
          {
            "$ref": "#/parameters/marketplaceOrderIdParameter'"
          },
          {
            "$ref": "#/parameters/correlationIdParameter'"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "description": "The error that explains to the merchant why the order change has failed",
            "schema": {
              "$ref": "#/definitions/userErrorMessage'"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The merchant order change failure has been processed"
          },
          "400": {
            "description": "Something wrong in the request, please check the documentation.",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage'"
            }
          },
          "404": {
            "$ref": "#/responses/orderChangeNotFound'"
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/orders/v1/{marketplaceCode}/{merchantCode}/list": {
      "get": {
        "tags": [
          "Marketplaces - Orders - Global"
        ],
        "summary": "Get order list",
        "operationId": "GetOrderList",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter'"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          },
          {
            "$ref": "#/parameters/pageNumberQueryStringParameter'"
          },
          {
            "$ref": "#/parameters/pageSizeQueryStringParameter'"
          },
          {
            "name": "imnLastModificationUtcDate",
            "in": "query",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "The paginated order list",
            "schema": {
              "$ref": "#/definitions/orderInfoPaginatedList'"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/orders/v1/{marketplaceCode}/{merchantCode}/{marketplaceOrderId}": {
      "get": {
        "tags": [
          "Marketplaces - Orders - Global"
        ],
        "summary": "Get order",
        "operationId": "GetOrder",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter'"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter'"
          },
          {
            "$ref": "#/parameters/marketplaceOrderIdParameter'"
          }
        ],
        "responses": {
          "200": {
            "description": "The order",
            "schema": {
              "$ref": "#/definitions/orderInfo'"
            }
          },
          "404": {
            "$ref": "#/responses/orderNotFound'"
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/lov/v1/": {
      "get": {
        "summary": "Get all list names",
        "operationId": "GetUserLovIndex",
        "tags": [
          "Marketplace API - List of Values - LOV"
        ],
        "responses": {
          "200": {
            "description": "Get the list names",
            "headers": {
              "ETag": {
                "description": "The ETag corresponding to the LOV Index",
                "type": "string"
              },
              "Cache-Control": {
                "description": "Indicates the directive around the caching mechanisms.\\\nFor more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/userLovIndex"
            }
          },
          "304": {
            "description": "The ETag sent in the http header If-None-Match did not change. So you can keep your version.",
            "headers": {
              "ETag": {
                "description": "The ETag corresponding to the LOV Index",
                "type": "string"
              },
              "Cache-Control": {
                "description": "Indicates the directive around the caching mechanisms.\\\nFor more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    },
    "/marketplace/lov/v1/{listName}": {
      "get": {
        "tags": [
          "Marketplace API - List of Values - LOV"
        ],
        "summary": "Get the list of values related to this list name",
        "operationId": "GetUserListOfValues",
        "parameters": [
          {
            "name": "listName",
            "in": "path",
            "required": true,
            "description": "The list of value name your want to get",
            "type": "string"
          },
          {
            "$ref": "#/parameters/acceptLanguageParameter'"
          },
          {
            "$ref": "#/parameters/ifNoneMatchParameter'"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of values",
            "headers": {
              "ETag": {
                "description": "The ETag corresponding to the LOV Index",
                "type": "string"
              },
              "Cache-Control": {
                "description": "Indicates the directive around the caching mechanisms.\\\nFor more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              },
              "Content-Language": {
                "description": "Indicates the language use in the response",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/userListOfValuesResponse"
            }
          },
          "304": {
            "description": "The ETag sent in the http header If-None-Match did not change. So you can keep your version.",
            "headers": {
              "ETag": {
                "description": "The ETag corresponding to the LOV Index",
                "type": "string"
              },
              "Cache-Control": {
                "description": "Indicates the directive around the caching mechanisms.\\\nFor more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\n",
                "type": "array",
                "collectionFormat": "csv",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "List not found",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage'"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError'"
          }
        }
      }
    }
  },
  "definitions": {
    "userLovIndex": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/userLovIndexLinks"
        }
      }
    },
    "userLovIndexLinks": {
      "type": "object",
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetUserLovIndexLink"
        },
        "lists": {
          "$ref": "#/definitions/userLovLinks"
        }
      }
    },
    "userLovLinks": {
      "description": "List of lov link. The key is the list name.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/links.GetUserListOfValuesLink"
      }
    },
    "links.GetUserListOfValuesLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3'"
        },
        {
          "example": {
            "href": "/v1/user/lov/Go2CultureName",
            "method": "GET"
          }
        }
      ]
    },
    "links.GetUserLovIndexLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3'"
        },
        {
          "example": {
            "href": "/v1/user/lov",
            "method": "GET"
          }
        }
      ]
    },
    "userListOfValuesResponse": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/userListOfValuesResponseLinks"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listOfValueItem'"
          }
        }
      }
    },
    "userListOfValuesResponseLinks": {
      "type": "object",
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetUserListOfValuesLink"
        }
      }
    },
    "offerPublicationStatus": {
      "type": "string",
      "enum": [
        "PublicationSucceed",
        "PublicationFailed",
        "UnpublicationSucceed",
        "UnpublicationFailed"
      ]
    },
    "offerPublicationFailureReason": {
      "type": "string",
      "enum": [
        "Undefined",
        "MarketplaceUndefinedReason",
        "UnknownEAN",
        "PriceTooHigh",
        "PriceTooLow",
        "PriceTooLowOrTooHigh",
        "InconsistentDeliveryMethod",
        "InconsistentEANAndSkuCouple",
        "VariationCreationRequired",
        "ForbiddenProduct",
        "IncorrectEAN",
        "IncorrectSKU",
        "InconsistentInventoryLevelVsCurrentOrders",
        "TemporaryErrorOnMarketplaceSide",
        "InvalidPreparationTime"
      ]
    },
    "offerUnpublicationFailureReason": {
      "type": "string",
      "enum": [
        "Undefined",
        "MarketplaceUndefinedReason"
      ]
    },
    "offerPublicationStatusBase": {
      "x-exclude": true,
      "type": "object",
      "discriminator": "type",
      "required": [
        "type",
        "sku",
        "utcDate"
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "sku": {
          "$ref": "#/definitions/sku"
        },
        "utcDate": {
          "type": "string",
          "format": "date-time",
          "description": "When the status has changed"
        }
      }
    },
    "offerPublicationSucceedStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/offerPublicationStatusBase"
        }
      ]
    },
    "offerUnpublicationSucceedStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/offerPublicationStatusBase"
        }
      ]
    },
    "offerPublicationFailedStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/offerPublicationStatusBase"
        },
        {
          "type": "object",
          "required": [
            "reason"
          ],
          "properties": {
            "reason": {
              "$ref": "#/definitions/offerPublicationFailureReason"
            },
            "additionalInformation": {
              "description": "Please provide the technical explanation here",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      ]
    },
    "offerUnpublicationFailedStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/offerPublicationStatusBase"
        },
        {
          "type": "object",
          "required": [
            "reason"
          ],
          "properties": {
            "reason": {
              "$ref": "#/definitions/offerUnpublicationFailureReason"
            },
            "additionalInformation": {
              "description": "Please provide the technical explanation here",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      ]
    },
    "offerPublicationStatusList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/offerPublicationStatusBase"
          }
        },
        "continuationToken": {
          "$ref": "#/definitions/paginationContinuationToken"
        }
      }
    },
    "offerPublicationStatusCounters": {
      "type": "object",
      "properties": {
        "published": {
          "type": "integer"
        },
        "failures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/offerPublicationStatusCounterPerFailure"
          }
        }
      }
    },
    "offerPublicationStatusCounterPerFailure": {
      "type": "object",
      "required": [
        "reason",
        "count"
      ],
      "properties": {
        "reason": {
          "$ref": "#/definitions/offerPublicationFailureReason"
        },
        "count": {
          "type": "integer"
        }
      }
    },
    "sku": {
      "type": "string",
      "description": "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers. http://schema.org/sku",
      "maxLength": 50
    },
    "paginationContinuationToken": {
      "type": "string",
      "description": "Just a string value that will help to get the next page"
    },
    "offerPublicationEventBase": {
      "x-exclude": true,
      "type": "object",
      "required": [
        "merchantCode",
        "marketplaceCode",
        "sku",
        "utcDate"
      ],
      "properties": {
        "merchantCode": {
          "$ref": "#/definitions/merchantCode"
        },
        "marketplaceCode": {
          "$ref": "#/definitions/marketplaceCode"
        },
        "sku": {
          "$ref": "#/definitions/sku"
        },
        "utcDate": {
          "type": "string",
          "format": "date-time",
          "description": "When the status has changed"
        }
      }
    },
    "offerPublicationSucceed": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/offerPublicationEventBase"
        }
      ]
    },
    "offerUnpublicationSucceed": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/offerPublicationEventBase"
        }
      ]
    },
    "offerPublicationFailed": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/offerPublicationEventBase"
        },
        {
          "type": "object",
          "required": [
            "reason"
          ],
          "properties": {
            "reason": {
              "$ref": "#/definitions/offerPublicationFailureReason"
            },
            "additionalInformation": {
              "description": "Please provide the technical explanation here",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      ]
    },
    "offerUnpublicationFailed": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/offerPublicationEventBase"
        },
        {
          "type": "object",
          "required": [
            "reason"
          ],
          "properties": {
            "reason": {
              "$ref": "#/definitions/offerUnpublicationFailureReason"
            },
            "additionalInformation": {
              "description": "Please provide the technical explanation here",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      ]
    },
    "offerPublicationCounterReceived": {
      "x-format": "Event",
      "type": "object",
      "required": [
        "merchantCode",
        "marketplaceCode",
        "utcDate",
        "published",
        "failed"
      ],
      "properties": {
        "merchantCode": {
          "$ref": "#/definitions/merchantCode"
        },
        "marketplaceCode": {
          "$ref": "#/definitions/marketplaceCode"
        },
        "utcDate": {
          "type": "string",
          "format": "date-time",
          "description": "When the status has changed"
        },
        "published": {
          "type": "integer"
        },
        "failed": {
          "type": "integer"
        }
      }
    },
    "merchantCode": {
      "type": "string",
      "description": "The merchant code identifier in IMN",
      "pattern": "^([A-Z|0-9]){5}$",
      "x-pattern": "^([A-Z|0-9]){5}$",
      "example": "MLT01"
    },
    "marketplaceCode": {
      "type": "string",
      "description": "The marketplace code identifier in IMN.\nFor now we have:\n- C1 for Cdiscount\n- E1 for ePrice\n- R1 for Real.DE\n- B1 for BOL\n- E2 for eMAG\n",
      "pattern": "^([A-Z]|[0-9]){2}$",
      "x-pattern": "^([A-Z]|[0-9]){2}$",
      "example": "C1"
    }
  },
  "externalDocs": {
    "description": "Find the documentation for IMN's API here",
    "url": "https://api-docs.imn.io/"
  },
  "x-tagGroups": [
    {
      "name": "Marketplace API - Offers",
      "tags": [
        "Marketplace API - Offers - Global"
      ]
    },
    {
      "name": "Marketplaces - Orders",
      "tags": [
        "Marketplaces - Orders - Global",
        "Marketplaces - Orders - Order Change Reporting",
        "Marketplaces - Orders - Batches"
      ]
    },
    {
      "name": "Marketplace API - List of Values",
      "tags": [
        "Marketplace API - List of Values - LOV"
      ]
    }
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key"
    }
  }
}