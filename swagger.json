{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "IMN marketplace API- DEV",
    "description": "# The REST API of IMN system\n## Overview\nThe REST APIs provide programmatic access to read and write IMN data. \nBasically, with this API you will be able to do everything like you were with your browser on https://go.imn.io !\n\nThe main features are:\n- Register and manage your account\n- Create and manage and share your stores with your friends/co-workers.\n- Import your product catalog and schedule the auto importation\n- Search the channels your want to use\n- Configure your channels for your catalogs to export your product information:\n    - cost and general settings\n    - category and columns mappings\n    - your will be able to create and manage your custom column\n    - put in place exlusion filters based on simple conditions on your product data\n    - override product values\n    - get product vision for a channel catalog scope\n- Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product.\n- Automatize your optimisation by using rules!\n- And of course... Manage your orders harvested from all your marketplaces:\n    - Synchronize your orders in an uniformized way\n    - Get the available actions and update the order status\n- ...and more!\n\n## Authentication credentials\nTBD\n\n## Things to keep in mind\n### API Rate Limits\n- The IMN REST API is limited to 100 calls/minute.\n\n### Media type\nThe default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.\n\n### Required content type\nThe required and default encoding for the request and responses is UTF8.\n\n### Required date time format\nAll our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.\n\n### Base URL\nThe Base URL of the IMN API Order Management REST API conforms to the following template.\n\nhttps://api.imn.io\n\nAll URLs returned by the IMN API are relative to this base URL, and all requests to the REST API must use this base URL template.\n\nYou can test our API on https://api-docs.imn.io/swagger-ui\\\nYou can contact us on [gitter, #IMN/API](https://gitter.im/IMN/API)\n",
    "x-logo": {
      "url": "https://imngo.blob.core.windows.net/imngo/images/imn-logo.png",
      "backgroundColor": "#FFFFFF"
    },
    "contact": {
      "email": "support@imn.io"
    },
    "license": {
      "name": "IMN",
      "url": "https://go.imn.io"
    }
  },
  "host": "api.imn.io",
  "x-IMN-api-ops": {
    "codeGenType": "webapi",
    "repo": "IMN",
    "appRoot": "IMN.MKP.MER.WebService",
    "apiName": "MarketplaceMerchantsV1",
    "namespace": "IMN.MKP.MER.WebService",
    "useBeezUPFrameworkVersion2": true,
    "comment": "No change. Just server side generation.\n",
    "using": [
      "IMN.Schemas",
      "IMN.MER.Schemas",
      "IMN.MER.Exceptions"
    ]
  },
  "x-basePath": "/marketplace/merchants/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Marketplace - Merchants API - Global",
      "x-displayName": "Global"
    },
    {
      "name": "Marketplace - Merchants API - Merchants",
      "x-displayName": "Merchants"
    },
    {
      "name": "Marketplace - Merchants API - Api Credentials",
      "x-displayName": "Api Credentials"
    },
    {
      "name": "Marketplace - Merchants API - Subscription",
      "x-displayName": "Subscription"
    },
    {
      "name": "Marketplace - Merchants API - Marketplace Merchant Code",
      "x-displayName": "Marketplace Merchant Code"
    },
    {
      "name": "Marketplaces - Orders - DRAFT - Global",
      "description": "All global operations (cross marketplace)",
      "x-displayName": "Global"
    },
    {
      "name": "Marketplaces - Orders - DRAFT - List",
      "description": "All Order list operations",
      "x-displayName": "List"
    },
    {
      "name": "Marketplaces - Orders - DRAFT - Order",
      "description": "All operations related to a single Order",
      "x-displayName": "Order"
    },
    {
      "name": "Marketplaces - Orders - DRAFT - Batches",
      "description": "All batch operations on Orders to reduce call rate",
      "x-displayName": "Batches"
    },
    {
      "name": "Marketplaces - Orders - DRAFT - Subscriptions",
      "description": "All orders subscription operations",
      "x-displayName": "Subscriptions"
    }
  ],
  "paths": {
    "/marketplace/merchants/v1/{marketplaceCode}": {
      "get": {
        "tags": [
          "Marketplace - Merchants API - Global"
        ],
        "summary": "Get marketplace index in the merchants API",
        "operationId": "GetMarketplaceMerchantApiIndex",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Marketplace Merchant Api Index",
            "schema": {
              "$ref": "#/definitions/marketplaceMerchantApiIndex"
            }
          },
          "404": {
            "$ref": "#/responses/marketplaceNotFound"
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/marketplace/merchants/v1/{marketplaceCode}/incoming": {
      "post": {
        "tags": [
          "Marketplace - Merchants API - Merchants"
        ],
        "summary": "Get the list of incoming merchants related to a marketplace",
        "operationId": "GetIncomingMerchantList",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/pageSizeQueryStringParameter"
          },
          {
            "$ref": "#/parameters/pageNumberQueryStringParameter"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/incomingMerchantListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/incomingMerchantList"
            }
          },
          "404": {
            "$ref": "#/responses/marketplaceNotFound"
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/marketplace/merchants/v1/{marketplaceCode}/incoming/{merchantCode}": {
      "get": {
        "tags": [
          "Marketplace - Merchants API - Merchants"
        ],
        "summary": "Get the incoming merchant",
        "operationId": "GetIncomingMerchantIndex",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The incoming merchant index",
            "schema": {
              "$ref": "#/definitions/incomingMerchantIndex"
            }
          },
          "404": {
            "$ref": "#/responses/merchantOrMarketplaceNotFound"
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/marketplace/merchants/v1/{marketplaceCode}/outgoing": {
      "post": {
        "tags": [
          "Marketplace - Merchants API - Merchants"
        ],
        "summary": "Get the list of outgoing merchants related to a marketplace",
        "operationId": "GetOutgoingMerchantList",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/pageSizeQueryStringParameter"
          },
          {
            "$ref": "#/parameters/pageNumberQueryStringParameter"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/outgoingMerchantListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/outgoingMerchantList"
            }
          },
          "404": {
            "$ref": "#/responses/marketplaceNotFound"
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/marketplace/merchants/v1/{marketplaceCode}/outgoing/{merchantCode}": {
      "get": {
        "tags": [
          "Marketplace - Merchants API - Merchants"
        ],
        "summary": "Get the outgoing merchant",
        "operationId": "GetOutgoingMerchantIndex",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The outgoing merchant index",
            "schema": {
              "$ref": "#/definitions/outgoingMerchantIndex"
            }
          },
          "404": {
            "$ref": "#/responses/merchantOrMarketplaceNotFound"
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/marketplace/merchants/v1/{marketplaceCode}/{merchantCode}/apiCredential": {
      "get": {
        "tags": [
          "Marketplace - Merchants API - Api Credentials"
        ],
        "summary": "Get the merchant API credential",
        "operationId": "GetMerchantApiCredential",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The merchant API credential",
            "schema": {
              "$ref": "#/definitions/marketplaceApiCredential"
            }
          },
          "404": {
            "$ref": "#/responses/merchantOrMarketplaceNotFound"
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      },
      "put": {
        "tags": [
          "Marketplace - Merchants API - Api Credentials"
        ],
        "summary": "Save the marketplace API credential",
        "operationId": "SaveMerchantApiCredential",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "name": "credential",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/marketplaceApiCredential"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Merchant API credentials saved"
          },
          "404": {
            "$ref": "#/responses/merchantOrMarketplaceNotFound"
          },
          "400": {
            "$ref": "#/responses/invalidMerchantCode"
          },
          "403": {
            "$ref": "#/responses/invalidMarketplaceCredential"
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/marketplace/merchants/v1/{marketplaceCode}/{merchantCode}/subscription/accept": {
      "post": {
        "tags": [
          "Marketplace - Merchants API - Subscription"
        ],
        "summary": "Accept a merchant subscription to a marketplace",
        "operationId": "AcceptMerchantSubscription",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Merchant subscription accepted"
          },
          "404": {
            "$ref": "#/responses/merchantOrMarketplaceNotFound"
          },
          "400": {
            "$ref": "#/responses/invalidMerchantCode"
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/marketplace/merchants/v1/{marketplaceCode}/{merchantCode}/subscription/decline": {
      "post": {
        "tags": [
          "Marketplace - Merchants API - Subscription"
        ],
        "summary": "Decline a merchant subscription to a marketplace",
        "operationId": "DeclineMerchantSubscription",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "name": "reason",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/merchantMarketplaceSubscriptionRefusalReason"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Merchant subscription declined"
          },
          "404": {
            "$ref": "#/responses/merchantOrMarketplaceNotFound"
          },
          "400": {
            "$ref": "#/responses/invalidMerchantCode"
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/marketplace/merchants/v1/{marketplaceCode}/{merchantCode}/subscription/block": {
      "post": {
        "tags": [
          "Marketplace - Merchants API - Subscription"
        ],
        "summary": "Block a merchant subscription to the marketplace",
        "operationId": "BlockMerchantSubscription",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "name": "reason",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/merchantMarketplaceSubscriptionRefusalReason"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Merchant subscription blocked"
          },
          "404": {
            "$ref": "#/responses/merchantOrMarketplaceNotFound"
          },
          "400": {
            "$ref": "#/responses/invalidMerchantCode"
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/marketplace/merchants/v1/{marketplaceCode}/{merchantCode}/configureMarketplaceMerchantCode": {
      "post": {
        "tags": [
          "Marketplace - Merchants API - Marketplace Merchant Code"
        ],
        "summary": "Configure marketplace merchant code",
        "operationId": "ConfigureMarketplaceMerchantCode",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "name": "marketplaceMerchantCode",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/marketplaceMerchantCode"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Marketplace merchant code configured"
          },
          "404": {
            "$ref": "#/responses/merchantOrMarketplaceNotFound"
          },
          "400": {
            "$ref": "#/responses/invalidMerchantCode"
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/marketplace/orders/v1/{marketplaceCode}/{merchantCode}/events": {
      "post": {
        "tags": [
          "Marketplaces - Orders - DRAFT - Batches"
        ],
        "operationId": "PushMerchantOrdersEvents",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/batchMerchantMarketplaceOrderChanges"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The merchant orders changes have been saved!"
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    }
  },
  "definitions": {
    "marketplaceMerchantApiIndexLinks": {
      "type": "object",
      "required": [
        "incoming",
        "outgoing"
      ],
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetMarketplaceMerchantApiIndexLink"
        },
        "incoming": {
          "$ref": "#/definitions/links.GetIncomingMerchantListLink"
        },
        "outgoing": {
          "$ref": "#/definitions/links.GetOutgoingMerchantListLink"
        }
      }
    },
    "marketplaceMerchantApiIndex": {
      "type": "object",
      "required": [
        "links"
      ],
      "properties": {
        "links": {
          "$ref": "#/definitions/marketplaceMerchantApiIndexLinks"
        }
      }
    },
    "merchantListOrderBy": {
      "type": "object",
      "required": [
        "propertyName"
      ],
      "properties": {
        "propertyName": {
          "$ref": "#/definitions/merchantListOrderByOn"
        },
        "sort": {
          "$ref": "#/definitions/sort"
        }
      }
    },
    "incomingMerchantListRequest": {
      "type": "object",
      "properties": {
        "orderBy": {
          "$ref": "#/definitions/merchantListOrderBy"
        },
        "searchCompanyName": {
          "type": "string",
          "description": "Search merchants by company name",
          "example": "Literie"
        },
        "searchMerchantCode": {
          "type": "string",
          "description": "Search merchants by the code",
          "example": "MLT"
        },
        "searchMarketplaceMerchantCode": {
          "type": "string",
          "description": "Search merchants bymarketplace MerchantCode",
          "example": 50041
        },
        "searchContactEmail": {
          "type": "string",
          "description": "Search merchants by contact Email",
          "example": "contact@ma-boutique-en-ligne.com"
        },
        "searchContactName": {
          "type": "string",
          "description": "Search merchants by the contact name",
          "example": "Johnson"
        },
        "searchContactPhone": {
          "type": "string",
          "description": "Search merchants by the ContactPhone",
          "example": "+33711223344"
        },
        "filterSubscriptionRequestUtcDateFrom": {
          "type": "string",
          "format": "date-time",
          "description": "filter merchants From beginning subscription request date"
        },
        "filterSubscriptionRequestUtcDateTo": {
          "type": "string",
          "format": "date-time",
          "description": "filter merchants by subscription request date"
        },
        "filterCountry": {
          "type": "string",
          "description": "filter merchants by country code",
          "example": "FRA"
        },
        "filterSourceMarketplaceCode": {
          "type": "string",
          "description": "filter merchants by Source MarketplaceCode",
          "example": "C1"
        },
        "filterCredentialStatus": {
          "$ref": "#/definitions/marketplaceCredentialStatus"
        },
        "filterSubscriptionStatus": {
          "$ref": "#/definitions/marketplaceSubscriptionStatus"
        },
        "filterofferPublicationStatus": {
          "$ref": "#/definitions/marketplaceOfferPublicationStatus"
        }
      }
    },
    "outgoingMerchantListRequest": {
      "type": "object",
      "properties": {
        "orderBy": {
          "$ref": "#/definitions/merchantListOrderBy"
        },
        "searchCompanyName": {
          "type": "string",
          "description": "Search merchants by the company name",
          "example": "Literie"
        },
        "searchMerchantCode": {
          "type": "string",
          "description": "Search merchants by the code",
          "example": "MLT"
        },
        "searchMarketplaceMerchantCode": {
          "type": "string",
          "description": "Search merchants by the marketplaceMerchantCode",
          "example": 50041
        },
        "searchContactEmail": {
          "type": "string",
          "description": "Search merchants by the contactEmail",
          "example": "contact@ma-boutique-en-ligne.com"
        },
        "searchContactName": {
          "type": "string",
          "description": "Search merchants by the contact name",
          "example": "Johnson"
        },
        "searchContactPhone": {
          "type": "string",
          "description": "Search merchants by the ContactPhone",
          "example": "+33711223344"
        },
        "filterCreationUtcDateFrom": {
          "type": "string",
          "format": "date-time",
          "description": "filter merchants by From beginning creation date"
        },
        "filterCreationUtcDateTo": {
          "type": "string",
          "format": "date-time",
          "description": "filter merchants by to ending creation date"
        },
        "filterCountry": {
          "type": "string",
          "description": "filter merchants by country code",
          "example": "FRA"
        },
        "filterSubscriptionStatus": {
          "$ref": "#/definitions/marketplaceSubscriptionStatus"
        },
        "filterofferPublicationStatus": {
          "$ref": "#/definitions/marketplaceOfferPublicationStatus"
        }
      }
    },
    "incomingMerchantList": {
      "type": "object",
      "required": [
        "links"
      ],
      "properties": {
        "links": {
          "$ref": "#/definitions/incomingMerchantListLinks"
        },
        "merchants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/incomingMerchantIndex"
          }
        },
        "paginationResult": {
          "$ref": "#/definitions/paginationResult"
        }
      }
    },
    "outgoingMerchantList": {
      "type": "object",
      "required": [
        "links"
      ],
      "properties": {
        "links": {
          "$ref": "#/definitions/outgoingMerchantListLinks"
        },
        "merchants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/outgoingMerchantIndex"
          }
        },
        "paginationResult": {
          "$ref": "#/definitions/paginationResult"
        }
      }
    },
    "links.GetMerchantApiCredentialLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        }
      ]
    },
    "links.GetMerchantIndexLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        }
      ]
    },
    "links.GetIncomingMerchantIndexLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        }
      ]
    },
    "links.GetOutgoingMerchantIndexLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        }
      ]
    },
    "links.AcceptMerchantSubscriptionLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        }
      ]
    },
    "links.DeclineMerchantSubscriptionLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        }
      ]
    },
    "links.BlockMerchantSubscriptionLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        }
      ]
    },
    "links.GetMarketplaceMerchantApiIndexLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        }
      ]
    },
    "links.GetIncomingMerchantListLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        }
      ]
    },
    "links.GetOutgoingMerchantListLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        }
      ]
    },
    "incomingMerchantInfoLinks": {
      "type": "object",
      "required": [
        "self",
        "apiCredential"
      ],
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetIncomingMerchantIndexLink"
        },
        "apiCredential": {
          "$ref": "#/definitions/links.GetMerchantApiCredentialLink"
        },
        "acceptSubscription": {
          "$ref": "#/definitions/links.AcceptMerchantSubscriptionLink"
        },
        "declineSubscription": {
          "$ref": "#/definitions/links.DeclineMerchantSubscriptionLink"
        },
        "blockSubscription": {
          "$ref": "#/definitions/links.BlockMerchantSubscriptionLink"
        }
      }
    },
    "incomingMerchantListLinks": {
      "type": "object",
      "required": [
        "self"
      ],
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetIncomingMerchantListLink"
        }
      }
    },
    "outgoingMerchantListLinks": {
      "type": "object",
      "required": [
        "self"
      ],
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetOutgoingMerchantListLink"
        }
      }
    },
    "outgoingMerchantInfoLinks": {
      "type": "object",
      "required": [
        "self",
        "apiCredential"
      ],
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetOutgoingMerchantIndexLink"
        },
        "apiCredential": {
          "$ref": "#/definitions/links.GetMerchantApiCredentialLink"
        }
      }
    },
    "incomingMerchantIndex": {
      "type": "object",
      "required": [
        "info",
        "links"
      ],
      "properties": {
        "info": {
          "$ref": "#/definitions/incomingMerchantInfo"
        },
        "links": {
          "$ref": "#/definitions/incomingMerchantInfoLinks"
        }
      }
    },
    "outgoingMerchantIndex": {
      "type": "object",
      "required": [
        "info",
        "links"
      ],
      "properties": {
        "info": {
          "$ref": "#/definitions/outgoingMerchantInfo"
        },
        "links": {
          "$ref": "#/definitions/outgoingMerchantInfoLinks"
        }
      }
    },
    "merchantInfo": {
      "type": "object",
      "required": [
        "code",
        "email",
        "companyName",
        "country",
        "firstName",
        "lastName",
        "phoneNumber",
        "creationUtcDate"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/merchantCode"
        },
        "email": {
          "$ref": "#/definitions/email"
        },
        "companyName": {
          "$ref": "#/definitions/merchantCompanyName"
        },
        "country": {
          "$ref": "#/definitions/countryIsoCodeAlpha3"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "creationUtcDate": {
          "type": "string",
          "format": "date-time"
        },
        "importedOfferCount": {
          "type": "integer",
          "format": "int32",
          "description": "Imported offer count from the source marketpalce"
        }
      }
    },
    "merchantTargetMarketplaceInfo": {
      "type": "object",
      "required": [
        "subscriptionRequestUtcDate",
        "subscriptionStatus",
        "credentialStatus",
        "shippingSettingsStatus",
        "offerPublicationStatusd",
        "targetMarketplaceCode"
      ],
      "properties": {
        "subscriptionRequestUtcDate": {
          "type": "string",
          "format": "date-time",
          "description": "date the merchant pushed his registration to the marketplace (through SF)"
        },
        "subscriptionStatus": {
          "$ref": "#/definitions/marketplaceSubscriptionStatus"
        },
        "credentialStatus": {
          "$ref": "#/definitions/marketplaceCredentialStatus"
        },
        "shippingSettingsStatus": {
          "$ref": "#/definitions/marketplaceShippingSettingsStatus"
        },
        "offerPublicationStatus": {
          "$ref": "#/definitions/marketplaceOfferPublicationStatus"
        },
        "publishedOfferCount": {
          "type": "integer",
          "format": "int32",
          "description": "Effective offer count published to the target marketplace"
        },
        "publishableOfferCount": {
          "type": "integer",
          "format": "int32",
          "description": "Publishable offer count to the target marketplace"
        },
        "targetMarketplaceCode": {
          "$ref": "#/definitions/marketplaceCode"
        },
        "targetMarketplaceMerchantCode": {
          "$ref": "#/definitions/marketplaceMerchantCode"
        }
      }
    },
    "incomingMerchantInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/merchantInfo"
        },
        {
          "$ref": "#/definitions/merchantTargetMarketplaceInfo"
        },
        {
          "type": "object",
          "required": [
            "code",
            "email",
            "companyName",
            "firstName",
            "lastName",
            "phoneNumber",
            "sourceMarketplaceCode",
            "creationUtcDate",
            "subscriptionRequestUtcDate",
            "subscriptionStatus",
            "credentialStatus",
            "shippingSettingsStatus",
            "offerPublicationStatus"
          ],
          "properties": {
            "sourceMarketplaceCode": {
              "$ref": "#/definitions/marketplaceCode"
            },
            "orderCount": {
              "type": "integer",
              "format": "int32",
              "example": 102
            },
            "turnOver": {
              "type": "number",
              "format": "decimal",
              "example": 10602.23
            },
            "currencyCode": {
              "$ref": "#/definitions/currencyCode"
            },
            "subscriptionHistory": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/marketplaceSubcriptionReporting"
              }
            }
          }
        }
      ]
    },
    "marketplaceSubcriptionReporting": {
      "type": "object",
      "required": [
        "senderEmail",
        "utcDate",
        "status"
      ],
      "properties": {
        "senderEmail": {
          "$ref": "#/definitions/email"
        },
        "utcDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/marketplaceSubscriptionStatus"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "outgoingMerchantInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/merchantInfo"
        },
        {
          "type": "object",
          "required": [
            "code",
            "email",
            "companyName",
            "firstName",
            "lastName",
            "phoneNumber",
            "sourceMarketplaceCode",
            "creationUtcDate"
          ],
          "properties": {
            "sourceMarketplaceCode": {
              "$ref": "#/definitions/marketplaceCode"
            },
            "sourceMarketplaceMerchantCode": {
              "$ref": "#/definitions/marketplaceMerchantCode"
            },
            "targetMarketplaces": {
              "type": "object",
              "description": "The key is the marketplace code",
              "additionalProperties": {
                "$ref": "#/definitions/merchantTargetMarketplaceInfo"
              }
            }
          }
        }
      ]
    },
    "merchantListOrderByOn": {
      "type": "string",
      "description": "Indicates on which property you want to order by the list of merchant",
      "default": "modificationUtcDate",
      "enum": [
        "merchantCode",
        "creationUtcDate",
        "modificationUtcDate"
      ]
    },
    "batchMerchantMarketplaceOrderChanges": {
      "x-format": "Message",
      "type": "object",
      "description": "Contains all changes for one marketplace for one merchant",
      "properties": {
        "created": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/order"
          }
        },
        "updated": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/order"
          }
        },
        "deleted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/orderIdentifier"
          }
        }
      }
    },
    "imnOrderId": {
      "description": "The IMN Order identifier",
      "type": "string",
      "format": "uuid",
      "example": "00000000000000000000000000000000000000000000000"
    },
    "order_MerchantOrderId": {
      "description": "The order merchant identifier",
      "type": "string",
      "example": "MyOrderMerchantId"
    },
    "order_MerchantECommerceSoftwareName": {
      "description": "The e-commerce software name of the merchant",
      "type": "string",
      "example": "Prestashop"
    },
    "order_MerchantECommerceSoftwareVersion": {
      "description": "The e-commece software version of the merchant",
      "type": "string",
      "example": "123.0.1"
    },
    "dateSearchType": {
      "description": "Indicates on which date you want to make the filter",
      "type": "string",
      "enum": [
        "Modification",
        "Purchase",
        "MarketPlaceModification"
      ],
      "default": "Modification"
    },
    "pageSize": {
      "description": "Indicate the order count per page",
      "type": "integer",
      "format": "int32",
      "default": 100,
      "minimum": 25,
      "maximum": 100,
      "example": 100
    },
    "pageNumber": {
      "description": "Indicates the page number",
      "format": "int32",
      "type": "integer",
      "example": 1,
      "minimum": 1,
      "default": 1
    },
    "order_Buyer_Name": {
      "description": "Buyer full name",
      "type": "string",
      "example": "Monroe"
    },
    "orderListRequestWithoutPagination": {
      "type": "object",
      "required": [
        "dateSearchType",
        "beginPeriodUtcDate",
        "endPeriodUtcDate"
      ],
      "properties": {
        "marketplaceCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/marketplaceCode"
          },
          "example": [
            "C1"
          ]
        },
        "imnOrderStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/imnOrderStatus"
          },
          "example": [
            "InProgress"
          ]
        },
        "dateSearchType": {
          "$ref": "#/definitions/dateSearchType"
        },
        "beginPeriodUtcDate": {
          "description": "The begin period you want to make the search. \\\nThe period MUST not be greater than 30 days.\nThe begin period MUST be lower than the end period.\n",
          "format": "date-time",
          "type": "string",
          "example": "2017-03-01T13:10:01Z"
        },
        "endPeriodUtcDate": {
          "description": "The end period of you search. \\\nThe period MUST not be greater than 30 days. \\\nThe end period MUST be greater than the begin period.\nThe end period MUST be lower to the current date.\n",
          "format": "date-time",
          "type": "string",
          "example": "2017-04-01T13:10:01Z"
        },
        "order_Buyer_Name": {
          "$ref": "#/definitions/order_Buyer_Name"
        },
        "marketplaceOrderIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/marketplaceOrderId"
          },
          "example": [
            "AmazonOrderId1234"
          ]
        },
        "order_MerchantOrderIds": {
          "description": "Merchant order id list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/order_MerchantOrderId"
          },
          "example": [
            "MyOrderId1234"
          ]
        }
      }
    },
    "orderListRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/orderListRequestWithoutPagination"
        },
        {
          "type": "object",
          "required": [
            "dateSearchType",
            "beginPeriodUtcDate",
            "endPeriodUtcDate",
            "pageSize",
            "pageNumber"
          ],
          "properties": {
            "pageSize": {
              "$ref": "#/definitions/pageSize"
            },
            "pageNumber": {
              "$ref": "#/definitions/pageNumber"
            }
          }
        }
      ]
    },
    "businessOperationType": {
      "type": "string",
      "x-lov": "OrderChangeBusinessOperationType",
      "example": "ShipOrder"
    },
    "orderIdentifier": {
      "type": "object",
      "required": [
        "marketplaceCode",
        "merchantCode",
        "imnOrderId"
      ],
      "properties": {
        "marketplaceCode": {
          "$ref": "#/definitions/marketplaceCode"
        },
        "merchantCode": {
          "$ref": "#/definitions/merchantCode"
        },
        "imnOrderId": {
          "$ref": "#/definitions/imnOrderId"
        }
      }
    },
    "clearMerchantOrderInfoListRequest": {
      "type": "object",
      "required": [
        "orders"
      ],
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/orderIdentifier"
          },
          "maxItems": 100,
          "uniqueItems": true,
          "minItems": 1,
          "example": [
            {
              "marketplaceCode": "Amazon",
              "merchantCode": 1234,
              "imnOrderId": "00000000000000000000000000000000000000000000000"
            },
            {
              "marketplaceCode": "Amazon",
              "merchantCode": 5678,
              "imnOrderId": "00000000000000000000000000000000000000000000000"
            },
            {
              "marketplaceCode": "Ebay",
              "merchantCode": 9876,
              "imnOrderId": "00000000000000000000000000000000000000000000000"
            }
          ]
        }
      }
    },
    "setMerchantOrderInfoListRequest": {
      "type": "object",
      "required": [
        "order_MerchantECommerceSoftwareName",
        "order_MerchantECommerceSoftwareVersion",
        "orders"
      ],
      "properties": {
        "order_MerchantECommerceSoftwareName": {
          "$ref": "#/definitions/order_MerchantECommerceSoftwareName"
        },
        "order_MerchantECommerceSoftwareVersion": {
          "$ref": "#/definitions/order_MerchantECommerceSoftwareVersion"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/setMerchantOrderInfoListRequestItem"
          },
          "maxItems": 100,
          "uniqueItems": true,
          "minItems": 1,
          "example": [
            {
              "marketplaceCode": "Amazon",
              "merchantCode": 1234,
              "imnOrderId": "8D47FF1427A26B064ca98e95f644361ada5a5be0bbb3b53",
              "order_MerchantOrderId": "BX1234"
            },
            {
              "marketplaceCode": "Amazon",
              "merchantCode": 5678,
              "imnOrderId": "8D47FF149F213D055f26e3c413e4c9ba5c5cfda460547a4",
              "order_MerchantOrderId": "BX5678"
            },
            {
              "marketplaceCode": "Ebay",
              "merchantCode": 9876,
              "imnOrderId": "8D47FF150217B60bdec05ab61c445d1a59e3da050b52823",
              "order_MerchantOrderId": "BX9876"
            }
          ]
        }
      }
    },
    "setMerchantOrderInfoListRequestItem": {
      "allOf": [
        {
          "$ref": "#/definitions/orderIdentifier"
        },
        {
          "type": "object",
          "required": [
            "marketplaceCode",
            "merchantCode",
            "imnOrderId",
            "order_MerchantOrderId"
          ],
          "properties": {
            "order_MerchantOrderId": {
              "$ref": "#/definitions/order_MerchantOrderId"
            }
          }
        }
      ]
    },
    "setMerchantOrderInfoRequest": {
      "type": "object",
      "required": [
        "order_MerchantOrderId",
        "order_MerchantECommerceSoftwareName",
        "order_MerchantECommerceSoftwareVersion"
      ],
      "properties": {
        "order_MerchantOrderId": {
          "$ref": "#/definitions/order_MerchantOrderId"
        },
        "order_MerchantECommerceSoftwareName": {
          "$ref": "#/definitions/order_MerchantECommerceSoftwareName"
        },
        "order_MerchantECommerceSoftwareVersion": {
          "$ref": "#/definitions/order_MerchantECommerceSoftwareVersion"
        }
      }
    },
    "accountSynchronizationList": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/accountSynchronization"
      }
    },
    "accountSynchronization": {
      "type": "object",
      "required": [
        "merchantCode",
        "marketplaceCode",
        "marketplaceBusinessCode"
      ],
      "properties": {
        "completedHarvestSynchroUtcDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "processing": {
      "description": "If true, there is currently a harvest or an order change in progress. Otherwise false.",
      "type": "boolean",
      "example": false
    },
    "links.GetOrderLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        },
        {
          "example": {
            "href": "/merchant/orders/v1/Amazon/1001/00000000000000000000000000000000000000000000000",
            "method": "GET"
          }
        }
      ]
    },
    "orderHeaderLinks": {
      "type": "object",
      "required": [
        "self"
      ],
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetOrderLink"
        }
      }
    },
    "orderHeader": {
      "description": "Describe the basic information related to an order. All properties with the prefix order_ are translated in the list of values /user/lov/OrderMetaInfoOrderDetails",
      "type": "object",
      "required": [
        "marketplaceCode",
        "merchantCode",
        "imnOrderId",
        "order_MarketplaceOrderId",
        "order_Status_IMNOrderStatus",
        "order_PurchaseUtcDate",
        "order_LastModificationUtcDate",
        "order_MarketplaceLastModificationUtcDate",
        "processing",
        "etag",
        "links"
      ],
      "properties": {
        "marketplaceCode": {
          "$ref": "#/definitions/marketplaceCode"
        },
        "merchantCode": {
          "$ref": "#/definitions/merchantCode"
        },
        "imnOrderId": {
          "$ref": "#/definitions/imnOrderId"
        },
        "imnOrderUrl": {
          "$ref": "#/definitions/httpUrl"
        },
        "order_MarketplaceOrderId": {
          "$ref": "#/definitions/marketplaceOrderId"
        },
        "order_Status_IMNOrderStatus": {
          "$ref": "#/definitions/imnOrderStatus"
        },
        "order_Status_MarketplaceOrderStatus": {
          "$ref": "#/definitions/marketplaceOrderStatus"
        },
        "order_MerchantOrderId": {
          "$ref": "#/definitions/order_MerchantOrderId"
        },
        "order_MerchantECommerceSoftwareName": {
          "$ref": "#/definitions/order_MerchantECommerceSoftwareName"
        },
        "order_MerchantECommerceSoftwareVersion": {
          "$ref": "#/definitions/order_MerchantECommerceSoftwareVersion"
        },
        "order_PurchaseUtcDate": {
          "description": "The purchase date of this order",
          "format": "date-time",
          "type": "string",
          "example": "2017-03-31T21:30:23Z"
        },
        "order_LastModificationUtcDate": {
          "description": "The last modification UTC date done by IMN of this order",
          "format": "date-time",
          "type": "string",
          "example": "2017-04-16T10:30:23Z"
        },
        "order_MarketplaceLastModificationUtcDate": {
          "description": "The last modification UTC date done by the marketplace on this order",
          "format": "date-time",
          "type": "string",
          "example": "2017-04-16T10:25:23Z"
        },
        "order_Buyer_Name": {
          "$ref": "#/definitions/order_Buyer_Name"
        },
        "order_TotalPrice": {
          "description": "The total price of this order (corresponding to the amount paid by the customer)",
          "format": "decimal",
          "type": "number",
          "example": 101.42
        },
        "order_CurrencyCode": {
          "$ref": "#/definitions/currencyCode"
        },
        "processing": {
          "$ref": "#/definitions/processing"
        },
        "etag": {
          "$ref": "#/definitions/etag"
        },
        "links": {
          "$ref": "#/definitions/orderHeaderLinks"
        }
      }
    },
    "etag": {
      "description": "ETag value to identify the order.\\\nThis information is required for the operation GetOrder and ChangeOrder.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n",
      "type": "string",
      "example": "\"ca071a4580129f932a03971968ffef69\""
    },
    "orderItem": {
      "description": "Describe an order item. All properties with the prefix orderItem_ are translated in the list of values /user/lov/OrderMetaInfoOrderItems",
      "type": "object",
      "required": [
        "imnOrderItemId",
        "orderItem_OrderItemType"
      ],
      "properties": {
        "imnOrderItemId": {
          "description": "The IMN identifier of the order Item",
          "type": "string",
          "example": "1"
        },
        "orderItem_OrderItemType": {
          "description": "The order item type of the order item",
          "type": "string",
          "example": "Product"
        },
        "orderItem_MerchantImportedProductId": {
          "description": "The product id indicated in the catalog importation in IMN system for this order item. This property will help you to match the order to the inventory system.",
          "type": "string",
          "example": "73267"
        },
        "orderItem_MerchantImportedProductIdColumnName": {
          "description": "The column name for the product id indicated in the catalog importation in IMN system related to this order item. This property will help you to match the order to the inventory system.",
          "example": "reference",
          "type": "string"
        },
        "orderItem_MerchantImportedProductUrl": {
          "description": "The product url indicated in the catalog importation in IMN system related to this order item",
          "example": "http://blabla.com/my-folder/73267.html",
          "type": "string"
        },
        "orderItem_MerchantProductIdColumnName": {
          "description": "The column name indicate in the mapping for the product id related to the order item",
          "example": "reference_produit",
          "type": "string"
        },
        "orderItem_IMNStoreId": {
          "description": "The store id in the IMN system related to the order item. This property will help you to match the order to the inventory system.",
          "example": "00000000-cceb-4c20-b2c9-000000000000",
          "type": "string"
        },
        "orderItem_ItemTax": {
          "description": "The tax of the order item",
          "type": "number",
          "format": "decimal",
          "example": 0.0
        },
        "orderItem_Title": {
          "description": "The title of the order item",
          "example": "bLA acide-plomb 6v-4.5ah 70x48x106mm",
          "type": "string"
        },
        "orderItem_ImageUrl": {
          "description": "The URL of the image of the order item",
          "example": "http://blabla.com//das6-45.jpg",
          "type": "string"
        },
        "orderItem_MerchantProductId": {
          "description": "The merchant product id of the order item",
          "example": "BlaLdas6-4.5",
          "type": "string"
        },
        "orderItem_MarketPlaceProductId": {
          "description": "The marketplace product identifier of the order item",
          "example": "",
          "type": "string"
        },
        "orderItem_ItemPrice": {
          "description": "The price of the order item",
          "example": 6.86,
          "type": "number",
          "format": "decimal"
        },
        "orderItem_Quantity": {
          "description": "The quantity of the order item",
          "example": 1,
          "type": "number",
          "format": "decimal"
        },
        "orderItem_TotalPrice": {
          "description": "The total price of the order item",
          "example": 6.86,
          "type": "number",
          "format": "decimal"
        },
        "orderItem_Shipping_Price": {
          "description": "The shipping price of the order item",
          "type": "number",
          "example": 0.0,
          "format": "decimal"
        }
      }
    },
    "orderLinks": {
      "allOf": [
        {
          "$ref": "#/definitions/orderHeaderLinks"
        },
        {
          "type": "object",
          "required": [
            "self",
            "history",
            "harvest",
            "setMerchantInfo",
            "clearMerchantInfo"
          ],
          "properties": {
            "history": {
              "$ref": "#/definitions/links.GetOrderHistoryLink"
            },
            "setMerchantInfo": {
              "$ref": "#/definitions/links.SetMerchantOrderInfoLink"
            },
            "clearMerchantInfo": {
              "$ref": "#/definitions/links.ClearMerchantOrderInfoLink"
            }
          }
        }
      ]
    },
    "links.GetOrderHistoryLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        },
        {
          "example": {
            "href": "/merchant/orders/v1/Amazon/1001/00000000000000000000000000000000000000000000000/history",
            "method": "GET"
          }
        }
      ]
    },
    "links.SetMerchantOrderInfoLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        },
        {
          "example": {
            "href": "/merchant/orders/v1/Amazon/1001/00000000000000000000000000000000000000000000000/setMerchantOrderInfo",
            "method": "POST",
            "parameters": {
              "request": {
                "in": "body",
                "type": "object",
                "schema": "setMerchantOrderInfoRequest"
              }
            }
          }
        }
      ]
    },
    "links.ClearMerchantOrderInfoLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        },
        {
          "example": {
            "href": "/merchant/orders/v1/Amazon/1001/00000000000000000000000000000000000000000000000/clearMerchantOrderInfo",
            "method": "POST"
          }
        }
      ]
    },
    "links.HarvestOrderLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        },
        {
          "example": {
            "href": "/merchant/orders/v1/Amazon/1001/00000000000000000000000000000000000000000000000/harvest",
            "method": "POST"
          }
        }
      ]
    },
    "order": {
      "allOf": [
        {
          "$ref": "#/definitions/orderHeader"
        },
        {
          "type": "object",
          "description": "Describe in details all informations related to an order. All properties with the prefix order_ are translated in the list of values /user/lov/OrderMetaInfoOrderDetails.",
          "required": [
            "marketplaceCode",
            "merchantCode",
            "imnOrderId",
            "marketplaceBusinessCode",
            "order_MarketplaceOrderId",
            "order_Status_IMNOrderStatus",
            "order_PurchaseUtcDate",
            "order_LastModificationUtcDate",
            "order_MarketplaceLastModificationUtcDate",
            "processing",
            "etag",
            "links",
            "orderItems",
            "transitionLinks"
          ],
          "properties": {
            "links": {
              "$ref": "#/definitions/orderLinks"
            },
            "order_MarketPlaceChannel": {
              "description": "Useful to identify the origin of the order. For example in Amazon.",
              "type": "string",
              "example": "Amazon France"
            },
            "order_TotalTax": {
              "description": "The total tax of this order",
              "type": "number",
              "format": "decimal",
              "example": 0.0
            },
            "order_TotalCommission": {
              "description": "The total commission of this order",
              "type": "number",
              "format": "decimal",
              "example": 0.0
            },
            "order_PaymentMethod": {
              "description": "The payment method of this order",
              "type": "string",
              "example": "1 / 1X"
            },
            "order_PayingUtcDate": {
              "description": "The UTC date of the payment of this order",
              "type": "string",
              "format": "date-time",
              "example": "2017-04-01T13:22:01Z"
            },
            "order_Comment": {
              "description": "The comment associated to this order",
              "type": "string",
              "example": "This is a comment"
            },
            "order_Shipping_Civility": {
              "description": "The civility of the person in the shipping address for this order",
              "type": "string",
              "example": "MRS"
            },
            "order_Shipping_CompanyName": {
              "description": "The company name of the shipping address for this order",
              "type": "string",
              "example": "My Company"
            },
            "order_Shipping_AddressName": {
              "description": "The name of the person in the shipping address for this order",
              "type": "string",
              "example": "Jacques BAUREGARD"
            },
            "order_Shipping_Email": {
              "description": "The email of the person in the shipping address for this order",
              "type": "string",
              "example": "client_000000@manomano.fr"
            },
            "order_Shipping_AddressLine1": {
              "description": "The shipping address line 1 of this order",
              "type": "string",
              "example": "5 rue amÃ©lie"
            },
            "order_Shipping_AddressLine2": {
              "description": "The shipping address line 2 of this order",
              "type": "string",
              "example": "BDR"
            },
            "order_Shipping_AddressLine3": {
              "description": "The shipping address line 3 of this order",
              "type": "string",
              "example": "RDC"
            },
            "order_Shipping_AddressPostalCode": {
              "description": "The shipping address postal code of this order",
              "type": "string",
              "example": "13014"
            },
            "order_Shipping_AddressCity": {
              "description": "The shipping address city of this order",
              "type": "string",
              "example": "Marseille"
            },
            "order_Shipping_AddressStateOrRegion": {
              "description": "The shipping address state or region of this order",
              "type": "string",
              "example": "BDR"
            },
            "order_Shipping_AddressCountryName": {
              "description": "The shipping address country name",
              "type": "string",
              "example": "France"
            },
            "order_Shipping_AddressCountryIsoCodeAlpha2": {
              "description": "The shipping address country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#/decoding_table for more details)",
              "type": "string",
              "example": "FR"
            },
            "order_Shipping_Phone": {
              "description": "The phone number of the person in the shipping address for this order",
              "type": "string",
              "example": "+33000000041"
            },
            "order_Shipping_MobilePhone": {
              "description": "The mobile phone number of the person in the shipping address for this order",
              "type": "string",
              "example": "+33000000042"
            },
            "order_Shipping_Price": {
              "description": "The shipping price of this order",
              "type": "number",
              "format": "decimal",
              "example": 6.9
            },
            "order_Shipping_Method": {
              "description": "The shipping method of this order",
              "type": "string",
              "example": "DPD Domicile"
            },
            "order_Shipping_ShippingTax": {
              "description": "The shipping tax for this order",
              "type": "number",
              "format": "decimal",
              "example": 0.0
            },
            "order_Shipping_EarliestShipUtcDate": {
              "description": "The UTC date of the earliest ship for this order",
              "type": "string",
              "example": "2017-04-02T21:30:00Z",
              "format": "date-time"
            },
            "order_Shipping_LatestShipUtcDate": {
              "description": "The UTC date of the latest ship for this order",
              "type": "string",
              "format": "date-time",
              "example": "2017-04-30T21:30:00Z"
            },
            "order_Buyer_Identifier": {
              "description": "The buyer identifier for this order",
              "type": "string",
              "example": "1234567890"
            },
            "order_Buyer_Civility": {
              "description": "The buyer civility for this order",
              "type": "string",
              "example": "Marseille"
            },
            "order_Buyer_CompanyName": {
              "description": "The buyer company name for this order",
              "type": "string",
              "example": "Marsillia"
            },
            "order_Buyer_Email": {
              "description": "The email of the buyer for this order",
              "type": "string",
              "example": "client_000000@manomano.fr"
            },
            "order_Buyer_AddressLine1": {
              "description": "The Buyer address line 1 of this order",
              "type": "string",
              "example": "5 rue amÃ©lie"
            },
            "order_Buyer_AddressLine2": {
              "description": "The Buyer address line 2 of this order",
              "type": "string",
              "example": "BDR"
            },
            "order_Buyer_AddressLine3": {
              "description": "The Buyer address line 3 of this order",
              "type": "string",
              "example": "RDC"
            },
            "order_Buyer_AddressPostalCode": {
              "description": "The Buyer address postal code of this order",
              "type": "string",
              "example": "13014"
            },
            "order_Buyer_AddressCity": {
              "description": "The Buyer address city of this order",
              "type": "string",
              "example": "Marseille"
            },
            "order_Buyer_AddressStateOrRegion": {
              "description": "The Buyer address state or region of this order",
              "type": "string",
              "example": "BDR"
            },
            "order_Buyer_AddressCountryName": {
              "description": "The Buyer address country name",
              "type": "string",
              "example": "France"
            },
            "order_Buyer_AddressCountryIsoCodeAlpha2": {
              "description": "The Buyer address country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#/decoding_table for more details)",
              "type": "string",
              "example": "FR"
            },
            "order_Buyer_Phone": {
              "description": "The phone number of the buyer for this order",
              "type": "string",
              "example": "+33000000101"
            },
            "order_Buyer_MobilePhone": {
              "description": "The mobile phone number of the buyer for this order",
              "type": "string",
              "example": "+33000000042"
            },
            "orderItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/orderItem"
              }
            },
            "transitionLinks": {
              "$ref": "#/definitions/orderTransitionLinks"
            }
          }
        }
      ]
    },
    "links.ChangeOrderLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        },
        {
          "type": "object",
          "properties": {
            "rel": {
              "type": "string",
              "description": "Indicate the relation name related to the link",
              "example": "self"
            }
          }
        },
        {
          "example": {
            "rel": "ShipOrder",
            "href": "/merchant/orders/v1/Amazon/1001/00000000000000000000000000000000000000000000000/ShipOrder",
            "method": "POST",
            "templated": true,
            "parameters": {
              "If-Match": {
                "in": "header",
                "value": "\"ca071a4580129f932a03971968ffef69\"",
                "required": true,
                "type": "string"
              },
              "testMode": {
                "in": "query",
                "type": "boolean",
                "required": false,
                "value": false
              },
              "userName": {
                "in": "query",
                "type": "string",
                "required": true
              },
              "request": {
                "in": "body",
                "type": "object",
                "schema": "changeOrderRequest",
                "properties": {
                  "order_Shipping_FulfillmentDate": {
                    "required": true,
                    "type": "date-time"
                  },
                  "order_Shipping_ShipperTrackingNumber": {
                    "required": true,
                    "type": "string"
                  },
                  "order_Shipping_CarrierName": {
                    "required": true,
                    "type": "string",
                    "lovRequired": true,
                    "lovLink": {
                      "href": "/v2/user/PriceMinisterCarrierName"
                    }
                  },
                  "order_Shipping_Method": {
                    "required": true,
                    "type": "string",
                    "lovRequired": false,
                    "lovLink": {
                      "href": "/v2/user/ShippingMethod_PriceMinister"
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "orderTransitionLinks": {
      "description": "Contains the authorized change actions for an order",
      "type": "array",
      "items": {
        "$ref": "#/definitions/links.ChangeOrderLink"
      },
      "example": [
        {
          "rel": "ShipOrder",
          "href": "/merchant/orders/v1/Amazon/1001/00000000000000000000000000000000000000000000000/ShipOrder",
          "method": "POST",
          "templated": true,
          "parameters": {
            "If-Match": {
              "in": "header",
              "value": "\"ca071a4580129f932a03971968ffef69\"",
              "required": true,
              "type": "string"
            },
            "testMode": {
              "in": "query",
              "type": "boolean",
              "required": false,
              "value": false
            },
            "userName": {
              "in": "query",
              "type": "string",
              "required": true
            },
            "request": {
              "in": "body",
              "type": "object",
              "schema": "changeOrderRequest",
              "properties": {
                "order_Shipping_FulfillmentDate": {
                  "required": true,
                  "type": "date-time"
                },
                "order_Shipping_ShipperTrackingNumber": {
                  "required": true,
                  "type": "string"
                },
                "order_Shipping_CarrierName": {
                  "required": true,
                  "type": "string",
                  "lovRequired": true,
                  "lovLink": {
                    "href": "/v2/user/PriceMinisterCarrierName"
                  }
                },
                "order_Shipping_Method": {
                  "required": true,
                  "type": "string",
                  "lovRequired": false,
                  "lovLink": {
                    "href": "/v2/user/ShippingMethod_PriceMinister"
                  }
                }
              }
            }
          }
        },
        {
          "rel": "CancelOrder",
          "href": "/merchant/orders/v1/Amazon/1001/00000000000000000000000000000000000000000000000/CancelOrder",
          "method": "POST",
          "templated": true,
          "parameters": {
            "If-Match": {
              "in": "header",
              "value": "\"ca071a4580129f932a03971968ffef69\"",
              "required": true,
              "type": "string"
            },
            "testMode": {
              "in": "query",
              "type": "boolean",
              "required": false,
              "value": false
            },
            "userName": {
              "in": "query",
              "type": "string",
              "required": true
            },
            "request": {
              "in": "body",
              "type": "object",
              "schema": "changeOrderRequest",
              "properties": {
                "order_Cancel_Reason": {
                  "required": true,
                  "type": "string",
                  "example": "I have a good reason"
                }
              }
            }
          }
        }
      ]
    },
    "orderIndex": {
      "type": "object",
      "required": [
        "links",
        "lovLinks"
      ],
      "properties": {
        "links": {
          "$ref": "#/definitions/orderIndexLinks"
        },
        "lovLinks": {
          "$ref": "#/definitions/orderIndexLovLinks"
        }
      }
    },
    "links.GetOrderIndexLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        },
        {
          "example": {
            "href": "/merchant/orders/v1",
            "method": "GET"
          }
        }
      ]
    },
    "orderIndexLinks": {
      "description": "Gives you all entry point operations you can do on this API",
      "type": "object",
      "required": [
        "self",
        "status",
        "setMerchantInfos",
        "clearMerchantInfos",
        "export",
        "autoTransitions",
        "orders",
        "lightOrders"
      ],
      "properties": {
        "self": {
          "$ref": "#/definitions/links.GetOrderIndexLink"
        },
        "setMerchantInfos": {
          "$ref": "#/definitions/links.SetMerchantOrderInfoListLink"
        },
        "clearMerchantInfos": {
          "$ref": "#/definitions/links.ClearMerchantOrderInfoListLink"
        },
        "orders": {
          "$ref": "#/definitions/links.GetOrderListFullLink"
        },
        "lightOrders": {
          "$ref": "#/definitions/links.GetOrderListLightLink"
        }
      }
    },
    "orderIndexLovLinks": {
      "description": "Gives you all the LOV to get the translations realated to operation name, codes, property names and statuses.",
      "type": "object",
      "required": [
        "orderChangeBusinessOperationType",
        "orderState",
        "orderProperty",
        "orderPropertyPosted"
      ],
      "properties": {
        "orderChangeBusinessOperationType": {
          "$ref": "#/definitions/LOVLink3"
        },
        "orderState": {
          "$ref": "#/definitions/LOVLink3"
        },
        "orderProperty": {
          "$ref": "#/definitions/LOVLink3"
        },
        "orderPropertyPosted": {
          "$ref": "#/definitions/LOVLink3"
        }
      }
    },
    "links.GetOrderListFullLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        },
        {
          "example": {
            "href": "/merchant/orders/v1/list/full",
            "method": "POST",
            "properties": {
              "Accept-Encoding": {
                "in": "header",
                "required": true,
                "type": "â€‹array",
                "schema": "string"
              },
              "request": {
                "in": "body",
                "required": false,
                "type": "object",
                "schema": "orderListRequest"
              }
            }
          }
        }
      ]
    },
    "links.GetOrderListLightLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        },
        {
          "example": {
            "href": "/merchant/orders/v1/list/light",
            "method": "POST",
            "properties": {
              "request": {
                "in": "body",
                "required": false,
                "type": "object",
                "schema": "orderListRequest"
              }
            }
          }
        }
      ]
    },
    "orderListLinks": {
      "description": "The list of actions you can do from the order list response",
      "type": "object",
      "required": [
        "setMerchantInfos",
        "clearMerchantInfos"
      ],
      "properties": {
        "setMerchantInfos": {
          "$ref": "#/definitions/links.SetMerchantOrderInfoListLink"
        },
        "clearMerchantInfos": {
          "$ref": "#/definitions/links.ClearMerchantOrderInfoListLink"
        }
      }
    },
    "orderListLightLinks": {
      "allOf": [
        {
          "$ref": "#/definitions/orderListLinks"
        },
        {
          "type": "object",
          "required": [
            "self",
            "harvest",
            "setMerchantInfos",
            "clearMerchantInfos",
            "export",
            "status"
          ],
          "properties": {
            "self": {
              "$ref": "#/definitions/links.GetOrderListLightLink"
            }
          }
        }
      ]
    },
    "orderListFullLinks": {
      "allOf": [
        {
          "$ref": "#/definitions/orderListLinks"
        },
        {
          "type": "object",
          "required": [
            "self",
            "harvest",
            "setMerchantInfos",
            "clearMerchantInfos",
            "export",
            "status"
          ],
          "properties": {
            "self": {
              "$ref": "#/definitions/links.GetOrderListFullLink"
            }
          }
        }
      ]
    },
    "links.SetMerchantOrderInfoListLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        },
        {
          "example": {
            "href": "/merchant/orders/v1/setMerchantOrderInfos",
            "method": "POST",
            "parameters": {
              "request": {
                "in": "body",
                "required": true,
                "type": "object",
                "schema": "setMerchantOrderInfoRequest"
              }
            }
          }
        }
      ]
    },
    "links.ClearMerchantOrderInfoListLink": {
      "allOf": [
        {
          "$ref": "#/definitions/link3"
        },
        {
          "example": {
            "href": "/merchant/orders/v1/clearMerchantOrderInfos",
            "method": "POST"
          }
        }
      ]
    },
    "orderListLight": {
      "description": "The order list with minimum information we have from the orders.\\\nThe paginationResult properties can be null if the list is empty.\n",
      "type": "object",
      "required": [
        "orders",
        "links"
      ],
      "properties": {
        "paginationResult": {
          "$ref": "#/definitions/paginationResult"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/orderHeader"
          }
        },
        "links": {
          "$ref": "#/definitions/orderListLightLinks"
        }
      }
    },
    "orderListFull": {
      "description": "The order list with all information we have from the orders and its items.\\\nThe paginationResult properties can be null if the list is empty.\n",
      "type": "object",
      "required": [
        "orders",
        "links"
      ],
      "properties": {
        "paginationResult": {
          "$ref": "#/definitions/paginationResult"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/order"
          }
        },
        "links": {
          "$ref": "#/definitions/orderListFullLinks"
        }
      }
    },
    "imnOrderStatus": {
      "type": "string",
      "description": "IMN order status. Unified for all marketplaces.",
      "example": "Shipped",
      "x-lov": "IMNOrderState"
    },
    "marketplaceOrderStatus": {
      "description": "The marketplace order state",
      "type": "string",
      "example": "In_progress_3"
    },
    "marketplaceOrderId": {
      "description": "The order marketplace identifier",
      "type": "string",
      "example": "AMAZON12345"
    },
    "orderHistory": {
      "description": "Describe the history related to an order",
      "type": "object",
      "properties": {
        "changeOrderReportings": {
          "description": "The list of change order operation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/changeOrderReporting"
          }
        },
        "lastModificationUtcDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "sourceType": {
      "description": "Indicates the origin of the operation",
      "type": "string",
      "enum": [
        "Api",
        "Go"
      ],
      "example": "Api"
    },
    "executionUUID": {
      "description": "The execution identifier",
      "format": "uuid",
      "type": "string",
      "example": "8D4176FA78D5A7Fffa91e9edc694ec5858be9a1b109507c"
    },
    "changeOrderReporting": {
      "description": "The reporting related to a change order operation",
      "type": "object",
      "properties": {
        "executionUUID": {
          "$ref": "#/definitions/executionUUID"
        },
        "changeOrderType": {
          "$ref": "#/definitions/businessOperationType"
        },
        "sourceType": {
          "$ref": "#/definitions/sourceType"
        },
        "sourceUserId": {
          "$ref": "#/definitions/userId"
        },
        "sourceUserName": {
          "type": "string",
          "example": "Guillaume Tell"
        },
        "creationUtcDate": {
          "description": "The creation UTC date of the execution",
          "format": "date-time",
          "type": "string",
          "example": "2017-04-01T13:10:03Z"
        },
        "processingStatus": {
          "description": "The processing status of the execution",
          "type": "string",
          "example": "Done"
        },
        "lastUpdateUtcDate": {
          "description": "The last update UTC date of the execution",
          "format": "date-time",
          "type": "string",
          "example": "2017-04-01T13:10:05Z"
        },
        "errorMessage": {
          "description": "The error message during the execution",
          "type": "string",
          "example": "This is an error message"
        },
        "ipAddress": {
          "description": "The IP address who request this operation",
          "type": "string",
          "example": "127.0.0.1"
        },
        "testMode": {
          "description": "This operation was a test",
          "type": "boolean",
          "example": false
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "changeOrderListRequest": {
      "type": "object",
      "description": "Contains all change order operations you want to make",
      "required": [
        "changeOrders"
      ],
      "properties": {
        "changeOrders": {
          "type": "array",
          "description": "The change order operations",
          "minLength": 1,
          "maxLength": 100,
          "items": {
            "$ref": "#/definitions/changeOrderListRequestItem"
          }
        }
      }
    },
    "changeOrderListRequestItem": {
      "type": "object",
      "description": "Contains the order identifier and the change order request",
      "required": [
        "order"
      ],
      "properties": {
        "order": {
          "$ref": "#/definitions/orderIdentifierWithETag"
        },
        "changeOrderRequest": {
          "$ref": "#/definitions/changeOrderRequest"
        }
      }
    },
    "orderIdentifierWithETag": {
      "allOf": [
        {
          "$ref": "#/definitions/orderIdentifier"
        },
        {
          "type": "object",
          "required": [
            "marketplaceCode",
            "merchantCode",
            "imnOrderId",
            "etag"
          ],
          "properties": {
            "etag": {
              "$ref": "#/definitions/etag"
            }
          }
        }
      ]
    },
    "changeOrderRequest": {
      "type": "object",
      "description": "All properties with the prefix order_ are translated in the list of values /user/lov#OrderMetaInfoPosted",
      "additionalProperties": {
        "type": "string"
      },
      "example": {
        "order_Shipping_ShipperTrackingNumber": "1H01845163783",
        "order_Shipping_ShippingUrl": "https://trackingpackage.com?number=1H01845163783",
        "order_Shipping_CarrierName": "La poste",
        "order_Shipping_FulfillmentDate": "2014-09-23T09:58:00Z",
        "order_Shipping_EstimatedDeliveryDate": "2014-09-24T09:58:00Z"
      }
    },
    "batchOrderOperationResponse": {
      "description": "The response given by the batch operation",
      "type": "object",
      "required": [
        "operations"
      ],
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/orderOperationResponse"
          }
        }
      }
    },
    "orderOperationResponse": {
      "description": "The response given by the batch operation for an order",
      "type": "object",
      "required": [
        "order",
        "success",
        "status"
      ],
      "properties": {
        "order": {
          "$ref": "#/definitions/orderIdentifier"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates if the operation succeed or not",
          "example": true
        },
        "status": {
          "type": "integer",
          "description": "Indicates the http status corresponding to the individual operation",
          "example": 204
        },
        "errors": {
          "description": "The error list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/userErrorMessage"
          }
        }
      }
    },
    "createSubscriptionRequest": {
      "type": "object",
      "required": [
        "targetUrl",
        "name",
        "applicationName"
      ],
      "properties": {
        "targetUrl": {
          "$ref": "#/definitions/httpUrl"
        },
        "eventTypes": {
          "$ref": "#/definitions/subscriptionOrderEventTypeList"
        },
        "name": {
          "$ref": "#/definitions/subscriptionName"
        },
        "applicationName": {
          "$ref": "#/definitions/subscriptionApplicationName"
        },
        "applicationVersion": {
          "$ref": "#/definitions/subscriptionApplicationVersion"
        }
      }
    },
    "subscriptionOrderEventTypeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/orderEventType"
      },
      "default": [
        "order.created",
        "order.updated"
      ],
      "example": [
        "order.created",
        "order.updated"
      ]
    },
    "subscriptionName": {
      "type": "string",
      "description": "The subscription name you want to use",
      "example": "MySubscriptionName"
    },
    "subscriptionApplicationName": {
      "type": "string",
      "description": "The name of your application",
      "example": "MyApp"
    },
    "subscriptionApplicationVersion": {
      "type": "string",
      "description": "The version of your application",
      "default": "1.0",
      "example": "1.0"
    },
    "subscription": {
      "type": "object",
      "description": "The subscription definition",
      "required": [
        "id",
        "targetUrl",
        "eventTypes",
        "status",
        "name",
        "applicationName",
        "applicationVersion"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/subscriptionId"
        },
        "status": {
          "$ref": "#/definitions/subscriptionStatus"
        },
        "targetUrl": {
          "$ref": "#/definitions/httpUrl"
        },
        "eventTypes": {
          "$ref": "#/definitions/subscriptionOrderEventTypeList"
        },
        "name": {
          "$ref": "#/definitions/subscriptionName"
        },
        "applicationName": {
          "$ref": "#/definitions/subscriptionApplicationName"
        },
        "applicationVersion": {
          "$ref": "#/definitions/subscriptionApplicationVersion"
        }
      }
    },
    "subscriptionId": {
      "type": "string",
      "format": "guid"
    },
    "subscriptionStatus": {
      "type": "string",
      "description": "The status of your subscription",
      "enum": [
        "active",
        "inactive"
      ]
    },
    "orderEventType": {
      "type": "string",
      "description": "The event type you can subscribe to",
      "enum": [
        "order.created",
        "order.updated"
      ]
    },
    "marketplaceSubscriptionStatus": {
      "description": "The subscription status",
      "type": "string",
      "enum": [
        "notRequested",
        "requested",
        "accepted",
        "declined",
        "blocked"
      ],
      "example": "accepted"
    },
    "merchantMarketplaceSubscriptionRefusalReason": {
      "type": "string",
      "minLength": 5,
      "x-minLength": 5,
      "maxLength": 4000,
      "x-maxLength": 4000,
      "description": "The marketplace reason for the subscription's refusal"
    },
    "merchantCompanyName": {
      "type": "string",
      "minLength": 2,
      "x-minLength": 2,
      "maxLength": 100,
      "x-maxLength": 100,
      "description": "Merchant's company name"
    },
    "marketplaceCredentialStatus": {
      "description": "The marketplace credential status",
      "type": "string",
      "enum": [
        "notConfigured",
        "configured",
        "expired"
      ],
      "example": "configured"
    },
    "marketplaceShippingSettingsStatus": {
      "description": "The marketplace shipping settings status",
      "type": "string",
      "enum": [
        "notConfigured",
        "configured"
      ]
    },
    "marketplacePreparationRuleType": {
      "type": "string",
      "enum": [
        "Increase",
        "Decrease",
        "Same"
      ],
      "default": "Same",
      "example": "Same"
    },
    "marketplacePreparationSetting": {
      "type": "object",
      "required": [
        "preparationRuleType"
      ],
      "properties": {
        "preparationRuleType": {
          "$ref": "#/definitions/marketplacePreparationRuleType"
        },
        "preparationDelay": {
          "type": "number",
          "format": "int32",
          "description": "The delay considering the rule"
        }
      }
    },
    "marketplaceShippingSettings": {
      "type": "object",
      "required": [
        "preparationSetting",
        "deliverySettings"
      ],
      "properties": {
        "preparationSetting": {
          "$ref": "#/definitions/marketplacePreparationSetting"
        },
        "deliverySettings": {
          "$ref": "#/definitions/marketplaceDeliverySettingList"
        }
      }
    },
    "deliveryMode": {
      "type": "string",
      "example": "Standard",
      "x-lov": "DeliveryMode"
    },
    "marketplaceDeliverySettingList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/marketplaceDeliverySetting"
      }
    },
    "marketplaceDeliverySetting": {
      "type": "object",
      "required": [
        "deliveryMode",
        "ruleType"
      ],
      "properties": {
        "deliveryMode": {
          "$ref": "#/definitions/deliveryMode"
        },
        "ruleType": {
          "$ref": "#/definitions/marketplaceShippingChargeRuleType"
        },
        "charge": {
          "type": "number",
          "example": 3.35,
          "description": "The charge for this delivery mode considering the rule"
        },
        "additionalCharge": {
          "type": "number",
          "example": 1.52,
          "description": "The additional charge for this delivery mode"
        }
      }
    },
    "marketplacePricingValue": {
      "type": "number",
      "pattern": "^([0-9]{1,13}[.]*[0-9]{0,6})$",
      "x-pattern": "^([0-9]{1,13}[.]*[0-9]{0,6})$",
      "example": 42.01
    },
    "marketplacePricingSetting": {
      "type": "object",
      "required": [
        "ruleType"
      ],
      "properties": {
        "ruleType": {
          "$ref": "#/definitions/marketplacePricingRuleType"
        },
        "value": {
          "$ref": "#/definitions/marketplacePricingValue"
        }
      }
    },
    "marketplacePricingRuleOperationType": {
      "type": "string",
      "enum": [
        "plus",
        "minus"
      ],
      "example": "plus"
    },
    "marketplacePricingRuleUnit": {
      "type": "string",
      "enum": [
        "percent",
        "amount"
      ],
      "example": "percent"
    },
    "marketplacePricingRuleType": {
      "type": "string",
      "default": "Same",
      "enum": [
        "PercentIncrease",
        "PercentDecrease",
        "AmountIncrease",
        "AmountDecrease",
        "Same"
      ]
    },
    "marketplaceShippingChargeRuleType": {
      "type": "string",
      "default": "SamePricing",
      "enum": [
        "PercentIncrease",
        "PercentDecrease",
        "AmountIncrease",
        "AmountDecrease",
        "Same",
        "FixedAmount"
      ]
    },
    "marketplaceInfo": {
      "type": "object",
      "required": [
        "code",
        "name",
        "sellerBackOfficeUrl",
        "sellerBackOfficeCredentialPageUrl",
        "imageUrl",
        "subscriptionStatus",
        "credentialStatus",
        "shippingSettingsStatus",
        "source"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/marketplaceCode"
        },
        "name": {
          "type": "string",
          "description": "The name of the marketplace",
          "example": "Cdiscount"
        },
        "sellerBackOfficeUrl": {
          "$ref": "#/definitions/httpUrl"
        },
        "sellerBackOfficeCredentialPageUrl": {
          "$ref": "#/definitions/httpUrl"
        },
        "imageUrl": {
          "$ref": "#/definitions/httpUrl"
        },
        "subscriptionStatus": {
          "$ref": "#/definitions/marketplaceSubscriptionStatus"
        },
        "credentialStatus": {
          "$ref": "#/definitions/marketplaceCredentialStatus"
        },
        "shippingSettingsStatus": {
          "$ref": "#/definitions/marketplaceShippingSettingsStatus"
        },
        "source": {
          "type": "boolean",
          "description": "If true, this marketplace is the source of offers",
          "default": false,
          "example": false
        }
      }
    },
    "marketplaceSubscriptionReporting": {
      "type": "object",
      "required": [
        "status",
        "messages"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/marketplaceSubscriptionStatus"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/marketplaceSubscriptionMessage"
          }
        }
      }
    },
    "marketplaceSubscriptionMessage": {
      "type": "object",
      "required": [
        "senderType",
        "utcDate",
        "status"
      ],
      "properties": {
        "senderType": {
          "$ref": "#/definitions/marketplaceSubscriptionMessageSenderType"
        },
        "utcDate": {
          "type": "string",
          "format": "date-time",
          "example": "2009-06-15T13:45:30Z"
        },
        "status": {
          "$ref": "#/definitions/marketplaceSubscriptionStatus"
        },
        "message": {
          "type": "string",
          "example": "Wrong shoes!"
        }
      }
    },
    "marketplaceSubscriptionMessageSenderType": {
      "type": "string",
      "enum": [
        "merchant",
        "marketplace"
      ],
      "example": "marketplace"
    },
    "marketplaceOfferPublicationStatus": {
      "description": "The Offer Importation status",
      "type": "string",
      "enum": [
        "disabled",
        "enabled"
      ],
      "example": "enabled"
    },
    "merchantEvents": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/merchantEvent"
      }
    },
    "merchantEvent": {
      "type": "object",
      "properties": {
        "eventType": {
          "type": "string"
        },
        "eventContent": {
          "type": "object"
        }
      }
    },
    "merchantCode": {
      "type": "string",
      "description": "The merchant code identifier in IMN",
      "pattern": "^([A-Z|0-9]){5}$",
      "x-pattern": "^([A-Z|0-9]){5}$",
      "example": "MLT01"
    },
    "marketplaceCode": {
      "type": "string",
      "description": "The marketplace code identifier in IMN. \nFor now we have:\n- C1 for Cdiscount\n- E1 for ePrice\n- R1 for Real.DE\n- B1 for BOL\n",
      "pattern": "^[A-Z][0-9]$",
      "x-pattern": "^[A-Z][0-9]$",
      "example": "C1"
    },
    "marketplaceMerchantCode": {
      "type": "string",
      "description": "The merchant code for a marketplace",
      "example": "005145"
    },
    "paginationRequestParameters": {
      "type": "object",
      "properties": {
        "pageSize": {
          "$ref": "#/definitions/pageSize"
        },
        "pageNumber": {
          "$ref": "#/definitions/pageNumber"
        }
      }
    },
    "catalogCategoryFilter": {
      "type": "object",
      "properties": {
        "categoryPath": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Indicates on which catalog category path you want to make the filter",
          "example": [
            "Maison",
            "Chambre"
          ]
        }
      }
    },
    "channelCategoryFilter": {
      "type": "object",
      "properties": {
        "categoryPath": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Indicates on which channel category path you want to make the filter",
          "example": [
            "Home",
            "Bedroom"
          ]
        }
      }
    },
    "productFilters": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "description": "The product sku filter",
          "example": "M1234"
        },
        "title": {
          "type": "string",
          "description": "The product title filter",
          "example": "RefrigÃ©rateur"
        },
        "additionalProductFilters": {
          "$ref": "#/definitions/additionalProductFilters"
        }
      }
    },
    "additionalProductFiltersValue": {
      "type": "object",
      "properties": {
        "operatorName": {
          "$ref": "#/definitions/productFilterOperatorName"
        },
        "values": {
          "description": "Must be null if the operator is \"IsNull\" or \"IsNotNull\". \nCan contains multiple value in case of \"InList\" operator. Otherwise a single value is expected.\n",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "My value"
          ]
        }
      },
      "example": {
        "672644c7-5bd0-4e25-88c1-1f732bda5e4c": {
          "operatorName": "GreaterTo",
          "values": [
            100
          ]
        }
      }
    },
    "additionalProductFilters": {
      "type": "object",
      "description": "Describe a filter on a product's column.\nThe key is the column identifier of your catalog or a custom column.\n",
      "additionalProperties": {
        "$ref": "#/definitions/additionalProductFiltersValue"
      }
    },
    "productFilterOperatorName": {
      "type": "string",
      "description": "Indicate the operator you want to make on the columnId",
      "enum": [
        "Equals",
        "Contains",
        "GreaterTo",
        "LowerTo",
        "InList",
        "IsNull",
        "IsNotNull"
      ]
    },
    "productBasicInfo": {
      "description": "The basic information related to a product",
      "type": "object",
      "required": [
        "productId",
        "productSku",
        "productTitle",
        "productImageUrl",
        "productExists"
      ],
      "properties": {
        "productId": {
          "format": "guid",
          "type": "string",
          "description": "The product identifier",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "productSku": {
          "type": "string",
          "description": "The product SKU",
          "example": "SKU1234"
        },
        "productTitle": {
          "type": "string",
          "description": "The product tile",
          "example": "My supert product"
        },
        "productImageUrl": {
          "type": "string",
          "format": "HttpUrl",
          "description": "The product image Url",
          "example": "http://i2.cdscdn.com/pdt2/3/9/0/1/550x550/hai6901018043390/rw/haier-b20fwrss-refrigerateur-americain.jpg"
        },
        "productExists": {
          "type": "boolean",
          "description": "Indicates if the product still exists in your catalog",
          "example": true
        }
      }
    },
    "countryIsoCodeAlpha3": {
      "description": "The country iso code alpha 3 <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\">(ISO 3166-1_alpha-3)</a>",
      "type": "string",
      "pattern": "^[A-Z]{3}$",
      "x-pattern": "^[A-Z]{3}$",
      "x-lov": "Country",
      "example": "FRA"
    },
    "currencyCode": {
      "description": "The currency code <a href=\"https://en.wikipedia.org/wiki/ISO_4217\">(ISO 4217)</a>\n",
      "type": "string",
      "pattern": "^[A-Z]{3}$",
      "x-pattern": "^[A-Z]{3}$",
      "example": "EUR"
    },
    "email": {
      "x-exclude": true,
      "description": "The email",
      "type": "string",
      "format": "email",
      "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
      "x-pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
      "example": "paulsimon@mysupercompany.com"
    },
    "userId": {
      "x-exclude": true,
      "format": "guid",
      "description": "The user identifier",
      "type": "string",
      "example": "8a7fbdec-9e71-472e-9974-27d5c1d57cf8"
    },
    "storeId": {
      "format": "guid",
      "description": "The store identifier",
      "type": "string",
      "example": "64f43358-63a1-47f7-97ec-0301fc39956b"
    },
    "productId": {
      "type": "string",
      "format": "guid",
      "description": "The product identifier",
      "example": "578419df-1bbf-41a6-96fa-862e42182b67"
    },
    "channelColumnId": {
      "type": "string",
      "format": "guid",
      "description": "The channel column identifier",
      "example": "8a76f06a-fefc-4c0d-bcfe-b210f1482977"
    },
    "listOfValueItem": {
      "description": "This object is used by LOV apis",
      "type": "object",
      "required": [
        "codeIdentifier",
        "intIdentifier"
      ],
      "properties": {
        "position": {
          "format": "int32",
          "type": "integer",
          "example": 1
        },
        "codeIdentifier": {
          "type": "string",
          "example": "FRA"
        },
        "translationText": {
          "type": "string",
          "example": "France"
        },
        "intIdentifier": {
          "format": "int32",
          "type": "integer",
          "example": 1
        }
      }
    },
    "paginationResult": {
      "x-exclude": true,
      "type": "object",
      "required": [
        "entryCount",
        "pageCount",
        "totalEntryCount",
        "links"
      ],
      "properties": {
        "entryCount": {
          "type": "integer",
          "description": "The entry count currently returned",
          "example": 25,
          "minimum": 0
        },
        "pageCount": {
          "type": "integer",
          "description": "The page count",
          "example": 38,
          "minimum": 0
        },
        "totalEntryCount": {
          "type": "integer",
          "description": "The total entry count",
          "example": 943,
          "minimum": 0
        },
        "links": {
          "$ref": "#/definitions/paginationResultLinks"
        }
      },
      "example": {
        "entryCount": 25,
        "pageCount": 38,
        "totalEntryCount": 943,
        "links": {
          "first": {
            "href": "/merchant/orders/v1/list/full",
            "method": "POST",
            "parameters": [
              {
                "name": "request",
                "in": "body",
                "type": "object",
                "schema": "orderListRequest",
                "value": {
                  "beginPeriodUtcDate": "2014-08-25T07:32:31.584Z",
                  "endPeriodUtcDate": "2014-09-24T07:32:31.584Z",
                  "pageSize": 25,
                  "pageNumber": 1
                }
              }
            ]
          },
          "last": {
            "href": "/merchant/orders/v1/list/full",
            "method": "POST",
            "parameters": [
              {
                "name": "request",
                "in": "body",
                "type": "object",
                "schema": "orderListRequest",
                "value": {
                  "beginPeriodUtcDate": "2014-08-25T07:32:31.584Z",
                  "endPeriodUtcDate": "2014-09-24T07:32:31.584Z",
                  "pageSize": 25,
                  "pageNumber": 38
                }
              }
            ]
          },
          "next": {
            "href": "/merchant/orders/v1/list/full",
            "method": "POST",
            "parameters": [
              {
                "name": "request",
                "in": "body",
                "type": "object",
                "schema": "orderListRequest",
                "value": {
                  "beginPeriodUtcDate": "2014-08-25T07:32:31.584Z",
                  "endPeriodUtcDate": "2014-09-24T07:32:31.584Z",
                  "pageSize": 25,
                  "pageNumber": 2
                }
              }
            ]
          }
        }
      }
    },
    "paginationResultLinks": {
      "x-exclude": true,
      "description": "The navigation links 'first', 'last', 'next', 'previous'",
      "type": "object",
      "required": [
        "first",
        "last"
      ],
      "properties": {
        "first": {
          "$ref": "#/definitions/link3"
        },
        "last": {
          "$ref": "#/definitions/link3"
        },
        "previous": {
          "$ref": "#/definitions/link3"
        },
        "next": {
          "$ref": "#/definitions/link3"
        }
      }
    },
    "href": {
      "x-exclude": true,
      "type": "string",
      "example": "/merchant/orders/v1/{marketplaceCode}/{IMNOrderId}",
      "description": "Indicate the relative uri for this link"
    },
    "operationId": {
      "x-exclude": true,
      "type": "string",
      "description": "The operationId to call.",
      "example": "GetOrder"
    },
    "httpMethod": {
      "x-exclude": true,
      "type": "string",
      "enum": [
        "GET",
        "POST",
        "PATCH",
        "DELETE",
        "PUT",
        "HEAD"
      ],
      "default": "GET",
      "example": "GET",
      "description": "Indicate the http method to use on this link"
    },
    "link3": {
      "x-exclude": true,
      "type": "object",
      "required": [
        "href"
      ],
      "properties": {
        "label": {
          "type": "string",
          "description": "The label corresponding to the link. This label is automatically translated based on the Accept-Language http header.",
          "example": "The translated label"
        },
        "docUrl": {
          "$ref": "#/definitions/docUrl"
        },
        "description": {
          "type": "string",
          "description": "The description of the link",
          "example": "This is a description link"
        },
        "href": {
          "$ref": "#/definitions/href"
        },
        "operationId": {
          "$ref": "#/definitions/operationId"
        },
        "method": {
          "$ref": "#/definitions/httpMethod"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/linkParameter3"
          }
        },
        "urlTemplated": {
          "type": "boolean",
          "description": "indicates whether the href is templated or not"
        },
        "allRequiredParamsProvided": {
          "type": "boolean",
          "description": "indicates whether all required params have been provided"
        },
        "allOptionalParamsProvided": {
          "type": "boolean",
          "description": "indicates whether all optionals params have been provided"
        },
        "info": {
          "$ref": "#/definitions/infoSummaries"
        }
      }
    },
    "link2": {
      "x-exclude": true,
      "type": "object",
      "x-deprecated": true,
      "required": [
        "rel"
      ],
      "properties": {
        "rel": {
          "type": "string",
          "description": "Indicate the relation name related to the link",
          "example": "self"
        },
        "href": {
          "$ref": "#/definitions/href"
        },
        "operationId": {
          "$ref": "#/definitions/operationId"
        },
        "method": {
          "$ref": "#/definitions/httpMethod"
        },
        "parameters": {
          "type": "array",
          "uniqueItems": true,
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/linkParameter2"
          }
        },
        "info": {
          "$ref": "#/definitions/infoSummaries"
        }
      }
    },
    "parameterIn": {
      "x-exclude": true,
      "type": "string",
      "description": "* path: if the parameter must be pass in the path uri\n* header: if the parameter must be passed in http header\n* query: if the parameter must be passed in querystring\n* body: if the parameter must be passed in the body\n* file: if the parameter must be passed in a multipart/form-data (https://swagger.io/docs/specification/2-0/file-upload/)\n",
      "example": "path",
      "enum": [
        "path",
        "header",
        "query",
        "body",
        "file"
      ]
    },
    "parameterType": {
      "x-exclude": true,
      "description": "The value type of the parameter",
      "type": "string",
      "enum": [
        "string",
        "integer",
        "number",
        "boolean",
        "object",
        "array",
        "date",
        "date-time",
        "file"
      ],
      "default": "string",
      "example": "string"
    },
    "linkParameter3": {
      "x-exclude": true,
      "type": "object",
      "required": [
        "in"
      ],
      "properties": {
        "label": {
          "type": "string",
          "description": "The label corresponding to the link parameter. This label is automatically translated based on the Accept-Language http header.",
          "example": "The translated label"
        },
        "value": {
          "type": "object",
          "description": "The value of the parameter. It can be an integer a string or an object.",
          "example": "1234"
        },
        "required": {
          "type": "boolean",
          "default": false,
          "example": true
        },
        "in": {
          "$ref": "#/definitions/parameterIn"
        },
        "lovLink": {
          "$ref": "#/definitions/LOVLink3"
        },
        "lovRequired": {
          "type": "boolean",
          "description": "If true, you MUST indicate a value from the list of values otherwise it's a freetext",
          "example": true
        },
        "description": {
          "type": "string",
          "description": "description of the parameter",
          "example": "the store identifier"
        },
        "schema": {
          "type": "string",
          "description": "schema of the parameter",
          "example": "orderListRequest"
        },
        "pattern": {
          "$ref": "#/definitions/validationPattern"
        },
        "properties": {
          "description": "If the parameter is an object with flexible properties (additionProperties/dictionary), we will describe the properties of the object.",
          "additionalProperties": {
            "$ref": "#/definitions/linkParameterProperty3"
          },
          "example": {
            "shipOrder": {
              "type": "â€‹string"
            }
          }
        }
      }
    },
    "validationPattern": {
      "type": "string",
      "description": "The regular expression to validate the value",
      "example": "*.-api$"
    },
    "linkParameterProperty3": {
      "x-exclude": true,
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "label": {
          "type": "string",
          "description": "The label corresponding to the link parameter property. This label is automatically translated based on the Accept-Language http header.",
          "example": "The translated label"
        },
        "value": {
          "type": "object",
          "description": "The value of the parameter. It can be an integer a string or an object.",
          "example": "1234"
        },
        "required": {
          "type": "boolean",
          "example": true
        },
        "type": {
          "$ref": "#/definitions/parameterType"
        },
        "lovLink": {
          "$ref": "#/definitions/LOVLink3"
        },
        "lovRequired": {
          "type": "boolean",
          "description": "If true, you MUST use indicate a value from the list of values otherwise it's a freetext",
          "example": true
        },
        "description": {
          "type": "string",
          "description": "description of the parameter",
          "example": "the store identifier"
        },
        "schema": {
          "type": "string",
          "description": "schema of the parameter",
          "example": "orderListRequest"
        },
        "pattern": {
          "$ref": "#/definitions/validationPattern"
        }
      }
    },
    "linkParameter2": {
      "x-exclude": true,
      "type": "object",
      "x-deprecated": true,
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the parameter",
          "example": "marketplaceCode"
        },
        "value": {
          "type": "string",
          "description": "The value of the parameter",
          "example": "1234"
        },
        "required": {
          "type": "boolean",
          "example": true
        },
        "in": {
          "$ref": "#/definitions/parameterIn"
        },
        "type": {
          "$ref": "#/definitions/parameterType"
        },
        "lovLink": {
          "description": "This parameter expect the values indicated in this list of values.",
          "$ref": "#/definitions/LOVLink2"
        },
        "lovRequired": {
          "type": "boolean",
          "description": "If true, you MUST use indicate a value from the list of values otherwise it's a freetext",
          "example": true
        }
      }
    },
    "LOVLink2": {
      "description": "Describe the way you have to follow to get access to the LOV",
      "x-deprecated": true,
      "type": "object",
      "required": [
        "listName"
      ],
      "properties": {
        "rel": {
          "type": "string",
          "description": "Indicate the relation name related to the link",
          "example": "LOV_Go2CultureName"
        },
        "href": {
          "type": "string",
          "example": "/merchant/lov/v1/{listName}",
          "description": "Indicate the relative uri pattern to the list of value"
        },
        "listName": {
          "type": "string",
          "description": "The name of the list of value",
          "example": "Go2CultureName"
        }
      }
    },
    "LOVLink3": {
      "x-exclude": true,
      "description": "Describe the way you have to follow to get access to the LOV",
      "type": "object",
      "required": [
        "href"
      ],
      "properties": {
        "href": {
          "type": "string",
          "format": "uri",
          "example": "/merchant/lov/v1/Go2CultureName",
          "description": "Indicate the uri to the list of value"
        },
        "method": {
          "$ref": "#/definitions/httpMethod"
        }
      }
    },
    "httpUrl": {
      "x-exclude": true,
      "description": "The URL <a href=\"https://en.wikipedia.org/wiki/URL\">https://en.wikipedia.org/wiki/URL</a>",
      "type": "string",
      "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "x-pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "example": "http://www.mydomain.com"
    },
    "errorResponseMessage": {
      "x-exclude": true,
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "uniqueItems": false,
          "items": {
            "$ref": "#/definitions/userErrorMessage"
          }
        }
      }
    },
    "docUrl": {
      "x-exclude": true,
      "type": "string",
      "format": "uri",
      "description": "The documentation related to this operation.",
      "example": "https://api-docs.imn.io/#operation/EnableChannelCatalog"
    },
    "userErrorMessage": {
      "x-exclude": true,
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "docUrl": {
          "$ref": "#/definitions/docUrl"
        },
        "code": {
          "type": "string",
          "description": "the error code. The error code can be a pattern containing the argument's name",
          "example": "CatalogImportationAlreadyInProgress(ExecutionId currentCatalogImportationId)"
        },
        "message": {
          "type": "string",
          "description": "The error message",
          "example": "There is already an importation in progress: b24d0dd8-a561-478a-9b26-34f573f03527\n"
        },
        "cultureName": {
          "type": "string",
          "description": "If the error is translated, the culture name will be indicated",
          "example": "en",
          "x-lov": "Go2CultureName"
        },
        "arguments": {
          "$ref": "#/definitions/userErrorMessageArguments"
        }
      }
    },
    "userErrorMessageArguments": {
      "x-exclude": true,
      "type": "object",
      "description": "a dictionary string/object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "infoSummaries": {
      "type": "object",
      "properties": {
        "successes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/successSummary"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorSummary"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warningSummary"
          }
        },
        "informations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/infoSummary"
          }
        }
      }
    },
    "successSummary": {
      "type": "object",
      "properties": {
        "successCode": {
          "type": "string"
        },
        "successMessage": {
          "type": "string"
        },
        "successArguments": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "propertyName": {
          "type": "string"
        },
        "propertyValue": {
          "type": "string"
        },
        "objectName": {
          "type": "string"
        }
      }
    },
    "errorSummary": {
      "type": "object",
      "properties": {
        "utcDate": {
          "format": "date-time",
          "type": "string"
        },
        "errorGuid": {
          "format": "uuid",
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "technicalErrorMessage": {
          "type": "string"
        },
        "exceptionDetail": {
          "$ref": "#/definitions/exceptionDetail"
        },
        "errorArguments": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "propertyName": {
          "type": "string"
        },
        "propertyValue": {
          "type": "string"
        },
        "objectName": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "warningSummary": {
      "type": "object",
      "properties": {
        "technicalErrorMessage": {
          "type": "string"
        },
        "warningMessage": {
          "type": "string"
        },
        "warningCode": {
          "type": "string"
        },
        "warningArguments": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "infoSummary": {
      "type": "object",
      "properties": {
        "informationCode": {
          "type": "string"
        },
        "informationMessage": {
          "type": "string"
        },
        "informationArguments": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "propertyName": {
          "type": "string"
        },
        "propertyValue": {
          "type": "string"
        },
        "objectName": {
          "type": "string"
        }
      }
    },
    "exceptionDetail": {
      "type": "object",
      "properties": {
        "helpLink": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "marketplaceApiCredential": {
      "description": "The API credentials of the merchant on his marketplace.",
      "type": "object",
      "additionalProperties": {
        "type": "string",
        "example": {
          "login": "mylogin",
          "password": "myPassword"
        }
      }
    },
    "merchantMarketplaceBase": {
      "type": "object",
      "required": [
        "merchantCode",
        "marketplaceCode"
      ],
      "properties": {
        "merchantCode": {
          "$ref": "#/definitions/merchantCode"
        },
        "marketplaceCode": {
          "$ref": "#/definitions/marketplaceCode"
        }
      }
    },
    "sort": {
      "x-excludeSql": true,
      "type": "string",
      "default": "ascending",
      "enum": [
        "ascending",
        "descending"
      ]
    }
  },
  "externalDocs": {
    "description": "Find the documentation for IMN's API here",
    "url": "https://api-docs.imn.io/"
  },
  "x-tagGroups": [
    {
      "name": "Marketplace - Merchants API",
      "tags": [
        "Marketplace - Merchants API - Global",
        "Marketplace - Merchants API - Merchants",
        "Marketplace - Merchants API - Api Credentials",
        "Marketplace - Merchants API - Subscription",
        "Marketplace - Merchants API - Marketplace Merchant Code"
      ]
    },
    {
      "name": "Marketplaces - Orders - DRAFT",
      "tags": [
        "Marketplaces - Orders - DRAFT - Global",
        "Marketplaces - Orders - DRAFT - List",
        "Marketplaces - Orders - DRAFT - Order",
        "Marketplaces - Orders - DRAFT - Batches",
        "Marketplaces - Orders - DRAFT - Subscriptions"
      ]
    }
  ],
  "parameters": {
    "imnOrderIdParameter": {
      "description": "The IMN Order identifier",
      "name": "imnOrderId",
      "in": "path",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-example": "00000000000000000000000000000000000000000000000"
    },
    "changeOrderTypeParameter": {
      "description": "The Order change type",
      "name": "changeOrderType",
      "in": "path",
      "required": true,
      "type": "string",
      "x-lov": "OrderChangeBusinessOperationType"
    },
    "userNameInQueryParameter": {
      "name": "userName",
      "description": "Sometimes the user in the e-commerce application is not the same as user associated with the current subscription key. We recommend providing your application's user login.",
      "in": "query",
      "required": true,
      "type": "string"
    },
    "testModeInQueryParameter": {
      "name": "testMode",
      "description": "If true, the operation will be not be sent to marketplace. But the validation will be taken in account.",
      "in": "query",
      "required": false,
      "type": "boolean",
      "default": false,
      "x-example": false
    },
    "storeIdOnlyGeneralParameters": {
      "name": "storeId",
      "in": "path",
      "required": true,
      "type": "string",
      "format": "guid",
      "description": "Your store identifier"
    },
    "pageNumberQueryStringParameter": {
      "name": "pageNumber",
      "description": "The page number you want to get",
      "in": "query",
      "required": true,
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "x-minimum": 1,
      "x-example": 1
    },
    "pageSizeQueryStringParameter": {
      "name": "pageSize",
      "description": "The entry count you want to get",
      "in": "query",
      "required": true,
      "type": "integer",
      "format": "int32",
      "minimum": 25,
      "x-minimum": 25,
      "maximum": 100,
      "x-maximum": 100,
      "x-example": 25
    },
    "ifNoneMatchParameter": {
      "name": "If-None-Match",
      "type": "string",
      "in": "header",
      "required": false,
      "description": "ETag value to identify the last known version of requested resource.\\\nTo avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\\nIf the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
    },
    "ifMatchParameter": {
      "name": "If-Match",
      "in": "header",
      "type": "string",
      "required": true,
      "description": "ETag value to identify the last known version of requested resource.\\\nTo ensure that you are making a change on the lastest version of the resource.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
    },
    "acceptLanguageParameter": {
      "name": "Accept-Language",
      "description": "Indicates that the client accepts the following languages.",
      "in": "header",
      "required": false,
      "type": "array",
      "collectionFormat": "csv",
      "items": {
        "type": "string"
      }
    },
    "acceptEncodingRequiredParameter": {
      "name": "Accept-Encoding",
      "description": "Allows the client to indicate wether it accepts a compressed encoding to reduce traffic size.",
      "in": "header",
      "required": true,
      "type": "array",
      "collectionFormat": "csv",
      "items": {
        "type": "string"
      }
    },
    "acceptEncodingOptionalParameter": {
      "name": "Accept-Encoding",
      "description": "Allows the client to indicate wether it accepts a compressed encoding to reduce traffic size.",
      "in": "header",
      "required": false,
      "type": "array",
      "collectionFormat": "csv",
      "items": {
        "type": "string"
      }
    },
    "walletPropertyCodeParameter": {
      "name": "walletPropertyCode",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The wallet document code"
    },
    "marketplaceCodeParameter": {
      "format": "MarketplaceCode",
      "name": "marketplaceCode",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The marketplace code"
    },
    "merchantCodeParameter": {
      "format": "MerchantCode",
      "name": "merchantCode",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The merchant code"
    }
  },
  "responses": {
    "GeneralError": {
      "description": "Occurs when something goes wrong",
      "schema": {
        "$ref": "#/definitions/errorResponseMessage"
      }
    },
    "304_NotModified": {
      "description": "The ETag sent in the http header If-None-Match did not change. So you are up to date !",
      "headers": {
        "Last-Modified": {
          "type": "string",
          "format": "date-time",
          "description": "Last modification UTC date of the resource\\\nFor more details go to this link: https://tools.ietf.org/html/rfc7232#section-2.2\n"
        },
        "ETag": {
          "type": "string",
          "description": "ETag value to identify the current version of the resource\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      }
    },
    "412_PreConditionFailed": {
      "description": "The ETag sent in the http header If-Match did not match with the current version. Please refresh the information related to this resource.",
      "headers": {
        "ETag": {
          "type": "string",
          "description": "The ETag value to identify the resource.\\\nFor more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3\n"
        }
      }
    },
    "merchantNotFound": {
      "description": "The merchant code is not found.",
      "x-exceptions": [
        "MerchantCodeNotFoundException"
      ],
      "schema": {
        "$ref": "#/definitions/errorResponseMessage"
      }
    },
    "marketplaceNotFound": {
      "description": "The marketplace code is not found.",
      "x-exceptions": [
        "MarketplaceCodeNotFoundException"
      ],
      "schema": {
        "$ref": "#/definitions/errorResponseMessage"
      }
    },
    "invalidMarketplaceCredential": {
      "description": "The marketplace credential is invalid",
      "x-exceptions": [
        "InvalidMarketplaceCredentialException"
      ],
      "schema": {
        "$ref": "#/definitions/errorResponseMessage"
      }
    },
    "merchantOrMarketplaceNotFound": {
      "description": "The merchant code or marketplace code is not found.",
      "x-exceptions": [
        "MarketplaceCodeNotFoundException",
        "MerchantCodeNotFoundException"
      ],
      "schema": {
        "$ref": "#/definitions/errorResponseMessage"
      }
    },
    "merchantCodeAlreadyUsed": {
      "description": "The merchant code is not available",
      "x-exceptions": [
        "MerchantCodeAlreadyUsedException"
      ],
      "schema": {
        "$ref": "#/definitions/errorResponseMessage"
      }
    },
    "invalidMerchantCode": {
      "description": "The merchant code is different from the state",
      "x-exceptions": [
        "InvalidMerchantCodeException"
      ],
      "schema": {
        "$ref": "#/definitions/errorResponseMessage"
      }
    },
    "notOfferSourceMarketplace": {
      "description": "The marketplace is not the offer source",
      "x-exceptions": [
        "NotOfferSourceMarketplaceException"
      ],
      "schema": {
        "$ref": "#/definitions/errorResponseMessage"
      }
    },
    "subscriptionNotAcceptedByMarketplace": {
      "description": "The subscription is not accepted by marketplace",
      "x-exceptions": [
        "SubscriptionNotAcceptedByMarketplaceException"
      ],
      "schema": {
        "$ref": "#/definitions/userErrorMessage"
      }
    }
  }
}